{"id":"9a7a8218eaf78d295cfd74e389776263","title":"REST风格中POST与PUT差别","body":"\r\n&nbsp;\r\n<p>REST（Representational State Transfer）是网络服务接口的一种风&#26684;，并不是一个标准，就web service而言，REST要比SOAP（SOAP是标准，不是风&#26684;）轻量得多，容易得多。我记得我最初开始接触web service的时候，所有的材料上来就是一大堆的名词，SOAP, WSDL,看得头都要大了，后来提出来的REST就容易理解得多，虽然目前SOAP在企业级的web service中还有一席之地，但是在公共的Internet上，不是REST的服务实在不好意思和人打招呼，我们经常可以看到评价某某服务是RESTful的，但是从来没有听说某某服务是SOAPful的。<\/p>\r\n<p>微软对REST的支持有点晚，自.NET3.5开始，WCF也可以提供RESTful接口。当然，REST不光限于web service，网页服务也可以RESTful，微软的ASP.NET MVC框架提供了直接的REST支持。<\/p>\r\n<p>因为REST只是风&#26684;，不是标准，所以有的方面容易有误解，比如说创建和更新某个URI代表的资源的时候，是用HTTP的PUT还是POST命令。REST常用的四种HTTP命令，GET、DELETE、PUT和POST，对于GET和DELETE，一个是获取资源，一个是删除资源，没什么异议，问题是PUT和POST，两者都有更改指定URI的语义，那么，究竟是用哪一个呢？<\/p>\r\n<p>有的观点认为，应该用POST来创建一个资源，用PUT来更新一个资源；有的观点认为，应该用PUT来创建一个资源，用POST来更新一个资源；还有的观点认为可以用PUT和POST中任何一个来做创建或者更新一个资源。这些观点都只看到了风&#26684;，争论起来也只是争论哪种风&#26684;更好，其实，用PUT还是POST，不是看这是创建还是更新资源的动作，这不是风&#26684;的问题，而是语义的问题。<\/p>\r\n<p>REST是一种风&#26684;，但是还是依赖于HTTP协议，在HTTP中，PUT被定义为idempotent的方法，POST则不是，这是一个很重要的区别。<\/p>\r\n<p>“Methods can also have the property of &quot;idempotence&quot; in that (aside from error or expiration issues) the side-effects of N &gt; 0 identical requests is the same as for a single request.”<\/p>\r\n<p>上面的话就是说，如果一个方法重复执行多次，产生的效果是一样的，那就是idempotent的。<\/p>\r\n<p>举一个简单的例子，加入由一个博客系统提供一个Web API，模式是这样http://superblogging/blogs/post/{blog-name}，很简单，将{blog-name}替换为我们的blog名字，往这个URI发送一个HTTP PUT或者POST请求，HTTP的body部分就是博文，这是一个很简单的REST API例子。我们应该用PUT方法还是POST方法？取决于这个REST服务的行为是否是idempotent的，假如我们发送两个http://superblogging/blogs/post/Sample请求，服务器端是什么样的行为？如果产生了两个博客帖子，那就说明这个服务不是idempotent的，因为多次使用产生了副作用了嘛；如果后一个请求把第一个请求覆盖掉了，那这个服务就是idempotent的。前一种情况，应该使用POST方法，后一种情况，应该使用PUT方法。<\/p>\r\n<p>也许你会觉得这个两个方法的差别没什么大不了的，用错了也不会有什么问题，但是你的服务一放到internet上，如果不遵从HTTP协议的规范，就可能给自己带来麻烦。比如，没准Google Crawler也会访问你的服务，如果让一个不是indempotent的服务可以用indempotent的方法访问，那么你服务器的状态可能就会被Crawler修改，这是不应该发生的。<\/p>\r\n"}
{"id":"f2bb1a1c51a70ff4143d42281797cf3e","title":"30天自制操作系统笔记 第2天","body":"\r\n<h1><span style=\"font-family:SimSun\"><\/span><\/h1>\r\n<h1><span style=\"font-family:SimSun\">第2天<\/span><\/h1>\r\n<p><\/p>\r\n<h2><span style=\"font-family:SimSun\">计算机架构<\/span><\/h2>\r\n<h3><span style=\"font-family:SimSun\">内存<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P34<br>\r\nCPU的存储能力很差，如果想让它处理大数据，就必须给它另外准备一套用于存储的电路。即使32位CPU，把所有寄存器<br>\r\n加在一起也最多只能存储32位个字节的数据。就算再加上全部段寄存器，也只有44字节。这么小，就连启动电脑的启动<br>\r\n区数据都装不下。<br>\r\n<br>\r\n<\/span><span style=\"font-family:SimSun\">内存实际是外部存储器，CPU通过自己的一部分管脚（引线）向内存发送电信号，CPU和内存之间还有称为芯片的控制单元。<\/span><span style=\"font-family:SimSun\"><br>\r\n<br>\r\n<\/span><span style=\"font-family:SimSun\">CPU和内存的电信号交换，并不仅是为了存取数据。从根本讲，程序也是存储在内存里的。<\/span><span style=\"font-family:SimSun\"><br>\r\n<br>\r\n<\/span><span style=\"font-family:SimSun\">CPU访问内存的速度比访问寄存器慢很多倍，记住这一点，我们才能开发出执行速度快的程序来。<\/span><span style=\"font-family:SimSun\"><br>\r\n<\/span>\r\n<p><span style=\"font-family:SimSun\"><br>\r\n<\/span><\/p>\r\n<p><span style=\"font-family:SimSun\">P40<\/span><\/p>\r\n<span style=\"font-family:SimSun\">大家所有的内存是想怎么用就怎么用的？不是这样的。内存的0号地址，也就是最开始部分，是BLOS程序实现不同功能的地方。如果我们随便使用。<br>\r\n就会与BLOS发生冲突，结果不止BLOS出错,我们的程序也肯定会问题百出.另外在内存的0xf0000号地址附近,还存放着BLOS程序本身,那里也不能使用.<br>\r\n内存中还有其它地方不能使用.<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">0x7c00<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P40<br>\r\n0x00007c00-0x00007dff:启动区内容的装载地址<br>\r\n为什么是0x7c00？ 0x7000不是更简单，好记？没办法，当初规定的就是0x7c00，做出这个规定的应该是IBM的大叔们，估计他们现在都成爷爷了。<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">BIOS<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P38<br>\r\n出厂时就组装在电脑主板上的ROM单元里。英文&quot;basic input output system&quot;，直译过来就是“基本输入输出系统”<br>\r\n<\/span>\r\n<p><span style=\"font-family:SimSun\"><br>\r\n<\/span><\/p>\r\n<p><span style=\"font-family:SimSun\">最近的BIOS功能非常多，甚至包括了电脑的设定画面，不过它的本质正如其名，就是为操作系统开发人员准备的各种函数集合。<\/span><\/p>\r\n<p><span style=\"font-family:SimSun\">而INT就是用来调用这些函数的指令。INT的后面是个数字，使用不同的数字可以调用不同的函数。<\/span><\/p>\r\n<p><span style=\"font-family:SimSun\">INT 0x10（即16）号函数，它的功能是控制显卡。<\/span><\/p>\r\n<p><\/p>\r\n<p><span style=\"font-family:SimSun\"><br>\r\n<\/span><\/p>\r\n<h2><span style=\"font-family:SimSun\">汇编<\/span><\/h2>\r\n<h3><span style=\"font-family:SimSun\">ORG指令<span style=\"white-space:pre\"> <\/span><\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P30<span style=\"white-space:pre\"> <\/span><br>\r\n这个指令告诉nask，在开始执行时把这些机器语言指令装载到内存中哪个地址，如果没有它有几个指令就不能被正确的翻译和执行。<br>\r\n另外有了这条指令的话，美元符（$）的含义发生变成，不再是输出文件的第几个字节，而是将要读入的内存地址。<br>\r\n来源于英文&quot;origin&quot;，意思是“源头,起点”。它会告诉nask，程序要从指定的这个地址开始，也就是要把程序装载到内存中的指定地址。<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">ORG 0x7c00？<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P39<br>\r\n换成其它行不行？还真不行，把它换成1234的话，程序马上就不动了。参见,计算机架构&gt;0x7c00<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">JMP指令<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P30<span style=\"white-space:pre\"> <\/span><br>\r\n相当于C语言的goto语句，来源于英文的jump，意思是跳转。<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">&quot;entry:&quot;标签的声明<span style=\"white-space:pre\"> <\/span>\r\n<\/span><\/h3>\r\n<p><span style=\"font-family:SimSun\">P30<\/span><\/p>\r\n<p><span style=\"font-family:SimSun\">用于指定JMP指令的跳转目的地，这与C语言很像。<\/span><\/p>\r\n<span style=\"font-family:SimSun\"><br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">MOV指令<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P30<br>\r\n应该是最常用的指令了，这个指令非常简单，即赋&#20540;。&quot;MOV AX,0&quot;，相当于&quot;AX=0;&quot;，这样一个赋&#20540;语句。<br>\r\n源自英文&quot;move&quot;，意思是“移动”。但是执行&quot;MOV SS,AX&quot;后，AX并没变空，还保留原来的&#20540;，所以这实际是赋&#20540;，而不是“移动”。<br>\r\nP37<br>\r\nMOV指令有个规则就是源数据和目的数据必须位数相同。<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">AX和SS<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P31<br>\r\nCPU中名为寄存器的存储电路，在机器语言中就相当于变量的功能。<br>\r\nAX----accumulator,累加寄存器<br>\r\nCX----counter,计数寄存器<br>\r\nDX----data,数据寄存器<br>\r\nBX----base,基址寄存器<br>\r\nSP----stack pointer,栈指针寄存器<br>\r\nBP----base pointer基址指针寄存器<br>\r\nSI----source index源变址寄存器<br>\r\nDI----destination index目的变址寄存器<br>\r\n这8个寄存器（16位）不管用哪一个都差不多能进行同样的计算，但如果都用AX来进行各种计算的话，程序就可以写得很简洁。<br>\r\n<br>\r\n<br>\r\nCX，为方便计数而设计，BX则适合作为计算内存地址的基点。其它寄存器也各有优点。<br>\r\n<br>\r\n<br>\r\nAX，CX,DX,BX，这个X表示扩展（extend）的意思.<br>\r\n这几个寄存器的排列顺序是按照机器语言中寄存器的编号顺序排列的.<br>\r\n<br>\r\n<br>\r\n这个8个寄存器全部合起来也只有16个字节.就算把这8个寄存器都用上,CPU也只能存储区区8个字节。<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">8位寄存器<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P32<br>\r\nAL----累加寄存器低位accumulator low<br>\r\nCL----计数寄存器低位counter low<br>\r\nDL----数据寄存器低位data low<br>\r\nBL----基址寄存器低位base low<br>\r\nAH----累加寄存器高位accumulator high<br>\r\nCH----计数寄存器高位counter high<br>\r\nDH----数据寄存器高位data high<br>\r\nBH----基址寄存器高位base high<br>\r\n<br>\r\n<br>\r\nAX寄存器 &nbsp; H- -L<br>\r\nAX寄存器共16位，0位到7位低8位称为AL,而8位到15位的高8位称为AH<br>\r\n<br>\r\n<br>\r\nBP,SP,SI,DI不能分为&quot;L&quot;和&quot;H&quot;，如果非要分高位，低位的话。就必须先用&quot;MOV, AX, SI&quot;将SI的&#20540;赋到AX中去，<br>\r\n然后再用AL,AH来取&#20540;，这好像是英特尔的设计人员思维模式<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI &nbsp;&nbsp;<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P33<br>\r\n这些就是32位寄存器.这个字母E还是来源于&quot;Extend&quot;(扩展)这个词.<br>\r\nEAX中低16位就是AX，但高16位没有名字，也没有编号。也就是，虽然可能把EAX当作2个16位寄存器使用，<br>\r\n但只有低16位用起来方便；如果要用高16位，就需要移位命令，把高16位移到低16位后才行。<br>\r\n<br>\r\n<br>\r\n这么说32位的CPU也只能存储区区32字节，存储能力真是小得可怜。<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">段寄存器 16位<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P33<br>\r\nES----附加段寄存器extra segment<br>\r\nCS----代码段寄存器code segment<br>\r\nSS----栈段寄存器stack segment<br>\r\nDS----数据段寄存器data segment<br>\r\nFS----没有名称segment part2<br>\r\nGS----没有名称segment part3<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">MOV AL,[SI]<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P34<br>\r\n在汇编语言出现这个方括号，寄存器所代表的意义就变成了&quot;内存&quot;。对，内存就是指的插入式的内存条。<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">BYTE,WORD,DWORD<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P35<br>\r\n汇编语言的保留字，<br>\r\n<br>\r\n<br>\r\nMOV BYTE [678],123 因为内存和CPU没有什么数&#20540;概念，所以需要指定8个存储单元的。<br>\r\n<br>\r\n<br>\r\nMOV WORD [678],123 一共16位，0000000001111011，下位01111011保存在678号，上位00000000保存在旁边的679号。<br>\r\n<br>\r\n<br>\r\n内存地址的指定方法，不仅可以使用常数，还可以指定寄存器。<br>\r\n虽然可以用寄存器指定内存地址，但是可以这样做的寄存器是有限的，只有BX,BP,SI,DI这一个，<br>\r\n剩下的AX,CX,DX,SP不能用来指定内存地址。因为CPU没有处理这种指令的电路，或者说没有表示这种指令的机器<br>\r\n如果想把DX内存里的内容赋给AL的时候，就这样写：<br>\r\nMOV BX, DX<br>\r\nMOV AL,BYTE [BX]<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">ADD<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P37<br>\r\n加法指令，如果用C语言改写&quot;ADD SI,1&quot;，就是SI=SI&#43;1<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">CMP<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P37<br>\r\n比较指令，比如C语言中的if(a==3) {处理;} 对a和3比较时，将其翻译成机器语言时，必须先写&quot;CMP a,3&quot;,告诉CPU比较对象，<br>\r\n然后下一步再写二者相等，需要做什么。<br>\r\n<br>\r\n<br>\r\nCMP A,0 将AL中的&#20540;和0进行比较<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">JE<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P37<br>\r\n条件跳转指令之一，所谓条件跳转指令，就是根据比较的结果决定跳转或不跳转。就JE指令而言，<br>\r\n如果比较结果相等，则跳转到指定的地址；如果不相等则不跳转，继续下一条指令。<br>\r\nCMP AL, 0<br>\r\nJE fin<br>\r\n相当于：if (AL == 0) {goto fin;}fin标号，结束之意。<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">INT<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P37<br>\r\n软件中断指令,以后会详讲<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">HLT<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">P39<br>\r\nHLT是让CPU停止动作的指令，不过并不是彻底停止，而是让CPU进入待机状态。只要外部发生变化，比如按下键盘，移动鼠标，CPU就会醒过来，继续执行程序。<br>\r\n如果没有HLT指令，CPU就会不停的全力空转，这回使CPU的负荷达到100%，非常费电。我们仅仅加一个HLT指令，就可以让CPU基本处于睡眠状态，可以省很多的电。<br>\r\n源自英文&quot;halt&quot;，意思是“停止”，halt也是Linux的一个关机命令。<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h2><span style=\"font-family:SimSun\">制作启动分区<\/span><\/h2>\r\n<span style=\"font-family:SimSun\">P40<br>\r\n不要一下就用nask来做整个磁盘映像，而是先只用它来制作512字节的启动区，剩下的部分用磁盘映像管理工具来做，这样以后用起来就方便了。<br>\r\n<br>\r\n<\/span>\r\n<h2><span style=\"font-family:SimSun\">Mafile 入门<\/span><\/h2>\r\n<div><span style=\"font-family:SimSun\">P41-44<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">Makefile<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">首先生成一个不带扩展名的Makefile<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">#号<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">表示注释<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">&quot;ipl.bin : ipl.nas Makefile&quot;<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">如果想要制作文件ipl.bin先检查一下ipl.nas和Makefile这2个文件是否准备好了。如果2个文件都有了，Make工具就会执行Makfile的下一行<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">一行结束时的&quot;\\&quot;<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">续行符号，表示这一行太长写不下去，跳转到下一行继续写。<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">Makefile<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">可以自动从Makefile里寻找文件的生成方法，自动检查文件是不是最新<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">img :<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">img :<br>\r\n&nbsp;../z_tools/make.exe -r helloos.img<br>\r\n输入&quot;make img&quot;就能达到与&quot;make -r helloos.img&quot;一样的效果<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">clean :<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">clean :<br>\r\n<span style=\"white-space:pre\"><\/span>-del ipl.bin<br>\r\n<span style=\"white-space:pre\"><\/span>-del ipl.lst<br>\r\n<span style=\"white-space:pre\"><\/span>删除掉最终成果（这里是helloos.img）以外的所有中间生成文件，把磁盘清理干净<br>\r\n<br>\r\n<br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">src_only :<span style=\"white-space:pre\"> <\/span>\r\n<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">src_only :<br>\r\n<span style=\"white-space:pre\"><\/span>../z_tools/make.exe clean<br>\r\n<span style=\"white-space:pre\"><\/span>-del helloos.img<br>\r\n把源程序以外的文件全都删除干净。<br>\r\n<span style=\"white-space:pre\"><\/span><br>\r\n<\/span>\r\n<h3><span style=\"font-family:SimSun\">default :<\/span><\/h3>\r\n<span style=\"font-family:SimSun\">default : &nbsp;&nbsp;<br>\r\n<span style=\"white-space:pre\"><\/span>../z_tools/make.exe img<br>\r\n<span style=\"white-space:pre\"><\/span>默认动作，当执行不带参数的make时，相当于执行&quot;make img&quot;命令<br>\r\n<\/span><\/div>\r\n<div><br>\r\n<\/div>\r\n<div><span style=\"font-family:SimSun\">看来好的笔记风&#26684;有助于记录笔记的持久性，间接加强了学习<span style=\"color:rgb(17,17,17); font-size:13px; line-height:21px; white-space:pre-wrap\">^o^y<\/span><\/span><\/div>\r\n"}
{"id":"63280594dac34277dd3819441adf67a2","title":"Google地图之Delphi实现，含全部源代码","body":"&nbsp;完全模拟Google网页地图，附带全部源码，我封装成了一个控件，需要SynaSock和GraphicEx.v9.9支持，这俩个在网上都可以下载。其中用SynaSock来下载地图，用GraphicEx来显示图片，附件中有示例和组件源码。 下载地址：http://www.bajiusoft.com/MyImage/Googlemap.JPG<BR><IMG alt=\"\" src=\"http://www.bajiusoft.com/MyImage/Googlemap.JPG\"><BR>"}
{"id":"5d1aa1c53a2574d86a123db64d49301b","title":"linux在shell中获取时间","body":"<p>获得当天的日期<\/p><p>date +%Y-%m-%d<\/p><p>输出： 2011-07-28<\/p><p>&nbsp;<\/p><p>将当前日期赋值给DATE变量<span style=\"font-family:Arial, sans-serif, Helvetica, Tahoma;LINE-HEIGHT: 18px\"><br />DATE=$(date +%Y%m%d) <\/span><\/p><p>有时候我们需要使用今天之前或者往后的日期，这时可以使用date的 -d参数<\/p><p>&nbsp;<\/p><p>获取明天的日期<\/p><p>date -d next-day +%Y%m%d <\/p><p>获取昨天的日期<\/p><p>date -d last-day +%Y%m%d<\/p><p>获取上个月的年和月<\/p><p>date -d last-month +%Y%m<\/p><p>获取下个月的年和月<br />date -d next-month +%Y%m<\/p><p>获取明年的年份<br />date -d next-year +%Y<\/p><p>&nbsp;<\/p><p>下面是一些date参数的说明和一些例子<\/p><p><span style=\"font-family:Arial, sans-serif, Helvetica, Tahoma;LINE-HEIGHT: 18px\"><br />名称 : date&nbsp;<br />使用权限 : 所有使用者&nbsp;<br />使用方式 : date [-u] [-d datestr] [-s datestr] [--utc] [--universal] [--date=datestr] [--set=datestr] [--help] [--version] [+FORMAT] [MMDDhhmm[[CC]YY][.ss]]&nbsp;<br />说明 : date 能用来显示或设定系统的日期和时间，在显示方面，使用者能设定欲显示的格式，格式设定为一个加号后接数个标记，其中可用的标记列表如下 :&nbsp;<br />时间方面 :&nbsp;<br />% : 印出&nbsp;<br />% %n : 下一行&nbsp;<br />%t : 跳格&nbsp;<br />%H : 小时(00..23)&nbsp;<br />%I : 小时(01..12)&nbsp;<br />%k : 小时(0..23)&nbsp;<br />%l : 小时(1..12)&nbsp;<br />%M : 分钟(00..59)&nbsp;<br />%p : 显示本地 AM 或 PM&nbsp;<br />%r : 直接显示时间 (12 小时制，格式为 hh:mm:ss [AP]M)&nbsp;<br />%s : 从 1970 年 1 月 1 日 00:00:00 UTC 到目前为止的秒数 %S : 秒(00..61)&nbsp;<br />%T : 直接显示时间 (24 小时制)&nbsp;<br />%X : 相当于 %H:%M:%S&nbsp;<br />%Z : 显示时区&nbsp;<br />日期方面 :&nbsp;<br />%a : 星期几 (Sun..Sat)&nbsp;<br />%A : 星期几 (Sunday..Saturday)&nbsp;<br />%b : 月份 (Jan..Dec)&nbsp;<br />%B : 月份 (January..December)&nbsp;<br />%c : 直接显示日期和时间&nbsp;<br />%d : 日 (01..31)&nbsp;<br />%D : 直接显示日期 (mm/dd/yy)&nbsp;<br />%h : 同 %b&nbsp;<br />%j : 一年中的第几天 (001..366)&nbsp;<br />%m : 月份 (01..12)&nbsp;<br />%U : 一年中的第几周 (00..53) (以 Sunday 为一周的第一天的情形)&nbsp;<br />%w : 一周中的第几天 (0..6)&nbsp;<br />%W : 一年中的第几周 (00..53) (以 Monday 为一周的第一天的情形)&nbsp;<br />%x : 直接显示日期 (mm/dd/yy)&nbsp;<br />%y : 年份的最后两位数字 (00.99)&nbsp;<br />%Y : 完整年份 (0000..9999)&nbsp;<br />若是不以加号作为开头，则表示要设定时间，而时间格式为 MMDDhhmm[[CC]YY][.ss]，&nbsp;<br />其中 MM 为月份，&nbsp;<br />DD 为日，&nbsp;<br />hh 为小时，&nbsp;<br />mm 为分钟，&nbsp;<br />CC 为年份前两位数字，&nbsp;<br />YY 为年份后两位数字，&nbsp;<br />ss 为秒数&nbsp;<br />把计 :&nbsp;<br />-d datestr : 显示 datestr 中所设定的时间 (非系统时间)&nbsp;<br />--help : 显示辅助讯息&nbsp;<br />-s datestr : 将系统时间设为 datestr 中所设定的时间&nbsp;<br />-u : 显示目前的格林威治时间&nbsp;<br />--version : 显示版本编号&nbsp;<br />例子 :&nbsp;<br />显示时间后跳行，再显示目前日期 : date +%T%n%D&nbsp;<br />显示月份和日数 : date +%B %d&nbsp;<br />显示日期和设定时间(12:34:56) : date --date 12:34:56&nbsp;<br />设置系统当前时间（12:34:56）：date --s 12:34:56&nbsp;<br />注意 : 当你不希望出现无意义的 0 时(比如说 1999/03/07)，则能在标记中插入 - 符号，比如说 date +%-H:%-M:%-S 会把时分秒中无意义的 0 给去掉，像是原本的 08:09:04 会变为 8:9:4。另外，只有取得权限者(比如说 root)才能设定系统时间。 当你以 root 身分更改了系统时间之后，请记得以 clock -w 来将系统时间写入 CMOS 中，这样下次重新开机时系统时间才会持续抱持最新的正确值。&nbsp;<br />ntp时间同步&nbsp;<br />linux系统下默认安装了ntp服务，手动进行ntp同步如下&nbsp;<br />ntpdate ntp1.nl.net&nbsp;<br />当然，也能指定其他的ntp服务器&nbsp;<br />-------------------------------------------------------------------&nbsp;<br />扩展功能&nbsp;<br />date 工具可以完成更多的工作，不仅仅只是打印出当前的系统日期。您可以使用它来得到给定的日期究竟是星期几，并得到相对于当前日期的相对日期。了解某一天是星期几&nbsp;<br />GNU 对 date 命令的另一个扩展是 -d 选项，当您的桌上没有日历表时（UNIX 用户不需要日历表），该选项非常有用。使用这个功能强大的选项，通过将日期作为引号括起来的参数提供，您可以快速地查明一个特定的日期究竟是星期几：&nbsp;<br />$ date -d &quot;nov 22&quot;&nbsp;<br />Wed Nov 22 00:00:00 EST 2006&nbsp;<br />$&nbsp;<br />在本示例中，您可以看到今年的 11 月 22 日是星期三。&nbsp;<br />所以，假设在 11 月 22 日召开一个重大的会议，您可以立即了解到这一天是星期三，而这一天您将赶到驻地办公室。&nbsp;<br />获得相对日期&nbsp;<br />d 选项还可以告诉您，相对于 当前日期若干天的究竟是哪一天，从现在开始的若干天或若干星期以后，或者以前（过去）。通过将这个相对偏移使用引号括起来，作为 -d 选项的参数，就可以完成这项任务。&nbsp;<br />例如，您需要了解两星期以后的日期。如果您处于 Shell 提示符处，那么可以迅速地得到答案：&nbsp;<br />$ date -d ’2 weeks’&nbsp;<br />关于使用该命令，还有其他一些重要的方法。使用 next/last指令，您可以得到以后的星期几是哪一天：&nbsp;<br />$ date -d ’next monday’ (下周一的日期)&nbsp;<br />$ date -d next-day +%Y%m%d（明天的日期）或者：date -d tomorrow +%Y%m%d&nbsp;<br />$ date -d last-day +%Y%m%d(昨天的日期) 或者：date -d yesterday +%Y%m%d&nbsp;<br />$ date -d last-month +%Y%m(上个月是几月)&nbsp;<br />$ date -d next-month +%Y%m(下个月是几月)&nbsp;<br />使用 ago 指令，您可以得到过去的日期：&nbsp;<br />$ date -d ’30 days ago’ （30天前的日期）&nbsp;<br />您可以使用负数以得到相反的日期：&nbsp;<br />$ date -d ’dec 14 -2 weeks’ （相对:dec 14这个日期的两周前的日期）&nbsp;<br />$ date -d ’-100 days’ (100天以前的日期)&nbsp;<br />$ date -d ’50 days’(50天后的日期)&nbsp;<br />这个技巧非常有用，它可以根据将来的日期为自己设置提醒，可能是在脚本或 Shell 启动文件中，如下所示：&nbsp;<br />DAY=`date -d ’2 weeks’ +&quot;%b %d&quot;`&nbsp;<br />if test &quot;`echo $DAY`&quot; = &quot;Aug 16&quot;; then echo ’Product launch is now two weeks away!’; fi&nbsp;<br /><br />##############################&nbsp;<br /><br />unix shell中的日期格式转换&nbsp;<br />$ t_t=&quot;Jul&nbsp; 1 21:29&quot;&nbsp;<br />$ date &quot;+%G-%m-%d %H:%M:%S&quot; -d &quot;$t_t&quot; # $t_t的格式是比较随意的&nbsp;<br />2008-07-01 21:29:00&nbsp;<br />$ date +%b/%d/%G -d &quot;2008-07-01&quot;&nbsp;<br />Jul/01/2008&nbsp;<br /><br />unix shell中的日期之间间隔的天数&nbsp;<br />$ expr '(' $(date +%s -d &quot;2008-07-02&quot;) - $(date +%s -d &quot;2008-05-30&quot;) ')' / 86400&nbsp;<br />33&nbsp;<br />##存在bcdate的话，可以直接使用。&nbsp;<br /><br />shell中日期加减指定间隔单位&nbsp;<br />增加36小时：&nbsp;<br />$ a=`date +%Y-%m-%d`&nbsp;<br />$ b=`date +%Y-%m-%d -d &quot;$a +36 hours&quot;`&nbsp;<br />10天前：&nbsp;<br />$ date -d &quot;$a -10 days&quot;&nbsp;<br />Sun Jun 22 00:00:00 CST 2008&nbsp;<br /><br />以指定格式显示文件更改后最后日期，如yyyy-mm-dd hh24:mi:ss&nbsp;<br />$ date &quot;+%Y-%m-%d %H:%M:%S&quot; -r test.bak&nbsp;<br />2008-07-01 21:28:55<\/span> <!--内容关联投票--><\/p>"}
{"id":"857cbd36268a8f4948117938bc019b63","title":"Struts1.1多模块配置开发的问题","body":"<p>&nbsp;最近研究了一下struts1.1的多模块置开发，本以为已经基本掌握，但突然又遇到了问题。<br />在登录界面(默认模块)我试着调用一个logon模块的action，结果总是失败，找不到对应的配置，经过分析最后终于勉强成功。<br />现将有关东西记录一下：<\/p>\r\n<p><strong>web.xml配置文件<\/strong><br />&nbsp; <em><font color=\"#ff6600\">&lt;servlet&gt;<br />&nbsp;&nbsp;&nbsp; &lt;servlet-name&gt;action&lt;/servlet-name&gt;<br />&nbsp;&nbsp;&nbsp; &lt;servlet-class&gt;com.logon.MainServlet&lt;/servlet-class&gt;<br />&nbsp;&nbsp;&nbsp; &lt;init-param&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;param-name&gt;debug&lt;/param-name&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;param-value&gt;2&lt;/param-value&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/init-param&gt;<br />&nbsp;&nbsp;&nbsp; &lt;init-param&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;param-name&gt;config&lt;/param-name&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;param-value&gt;/WEB-INF/struts-config.xml&lt;/param-value&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/init-param&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;init-param&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;param-name&gt;config/logon&lt;/param-name&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;param-value&gt;/WEB-INF/struts-config-logon.xml&lt;/param-value&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/init-param&gt;<br />&nbsp;&nbsp;&nbsp; &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;<br />&nbsp; &lt;/servlet&gt;<br />&nbsp; <br />&nbsp; &lt;servlet-mapping&gt;<br />&nbsp;&nbsp;&nbsp; &lt;servlet-name&gt;action&lt;/servlet-name&gt;<br />&nbsp;&nbsp;&nbsp; &lt;url-pattern&gt;*.do&lt;/url-pattern&gt;<br />&nbsp; &lt;/servlet-mapping&gt;<\/font><\/em><\/p>\r\n<p><br /><strong>&nbsp;struts-config-logon.xml配置文件：<\/strong><\/p>\r\n<p>&nbsp;<font color=\"#ff6600\"><em>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br />&lt;!DOCTYPE struts-config PUBLIC &quot;-//Apache Software Foundation//DTD Struts Configuration 1.1//EN&quot; &quot;<\/em><\/font><a href=\"http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd\"><font color=\"#ff6600\"><em>http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd<\/em><\/font><\/a><font color=\"#ff6600\"><em>&quot;&gt;<\/em><\/font><\/p>\r\n<p><font color=\"#ff6600\"><em>&lt;struts-config&gt;<br />&nbsp; &lt;data-sources /&gt;<br />&nbsp; &lt;form-beans &gt;<br />&nbsp;&nbsp;&nbsp; &lt;form-bean name=&quot;logonForm&quot; type=&quot;com.logon.LogonActionForm&quot; /&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp; &lt;/form-beans&gt;<\/em><\/font><\/p>\r\n<p><font color=\"#ff6600\"><em>&nbsp; &lt;global-exceptions /&gt;<br />&nbsp; <br />&nbsp; &lt;!-- ========== Global Forward Definitions ============================== --&gt;<br />&nbsp; &lt;global-forwards&gt;<br />&nbsp; &lt;/global-forwards&gt;<\/em><\/font><\/p>\r\n<p><font color=\"#ff6600\"><em>&nbsp; &lt;action-mappings &gt;<br />&nbsp;&nbsp;&nbsp; &lt;action path=&quot;/logon&quot; validate=&quot;false&quot; scope=&quot;request&quot; name=&quot;logonForm&quot; input=&quot;/login.jsp&quot;&nbsp; type=&quot;com.logon.LogonAction&quot;&gt;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;forward name=&quot;logonSuccess&quot; path=&quot;/logonDetail.jsp&quot;&gt;&lt;/forward&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/action&gt;<br />&nbsp;&nbsp; &lt;action path=&quot;/logout&quot; validate=&quot;false&quot; scope=&quot;request&quot; name=&quot;logonForm&quot; type=&quot;com.logon.LogoutAction&quot;&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;forward name=&quot;logoutSuccess&quot; path=&quot;/index.jsp&quot; contextRelative=&quot;true&quot;&gt;&lt;/forward&gt;<br />&nbsp;&nbsp;&lt;/action&gt;<\/em><\/font><font color=\"#ff6600\"><em><br />&nbsp; &lt;/action-mappings&gt;<\/em><\/font><\/p>\r\n<p><font color=\"#ff6600\"><em>&lt;/struts-config&gt;<\/em><\/font><\/p>\r\n<p><br /><strong>struts-config.xml配置文件：<\/strong><br /><font color=\"#ff6600\"><em>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br />&lt;!DOCTYPE struts-config PUBLIC &quot;-//Apache Software Foundation//DTD Struts Configuration 1.1//EN&quot; &quot;<\/em><\/font><a href=\"http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd\"><font color=\"#ff6600\"><em>http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd<\/em><\/font><\/a><font color=\"#ff6600\"><em>&quot;&gt;<\/em><\/font><\/p>\r\n<p><font color=\"#ff6600\"><em>&lt;struts-config&gt;<br />&nbsp; &lt;data-sources /&gt;<br />&nbsp; &lt;form-beans &gt;<br />&nbsp; &lt;/form-beans&gt;<\/em><\/font><\/p>\r\n<p><font color=\"#ff6600\"><em>&nbsp; &lt;global-exceptions /&gt;<br />&nbsp; <br />&nbsp; &lt;!-- ========== Global Forward Definitions ============================== --&gt;<br />&nbsp; &lt;global-forwards&gt;<br />&nbsp; &lt;/global-forwards&gt;<\/em><\/font><\/p>\r\n<p><font color=\"#ff6600\"><em>&nbsp; &lt;action-mappings &gt;&nbsp;&nbsp;&nbsp; <br />&nbsp; &lt;/action-mappings&gt;<\/em><\/font><\/p>\r\n<p><font color=\"#ff6600\"><em>&lt;/struts-config&gt;<\/em><\/font><\/p>\r\n<p><br /><strong>login.jsp位于webroot目录下：<\/strong><br /><font color=\"#ff6600\"><em>&lt;body&gt;<br />&nbsp;&nbsp;&nbsp; &lt;html:form action=&quot;/logon/logon.do&quot; method=&quot;post&quot; focus=&quot;ID&quot;&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;table border=&quot;0&quot;&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;Login:&lt;/td&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;html:text property=&quot;ID&quot; /&gt;&lt;/td&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;Password:&lt;/td&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;html:password property=&quot;password&quot; /&gt;&lt;/td&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td colspan=&quot;2&quot; align=&quot;center&quot;&gt;&lt;html:submit /&gt;&lt;/td&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/table&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/html:form&gt;<br />&nbsp; &lt;/body&gt;<\/em><\/font><\/p>\r\n<p>&nbsp; <strong>logonDetail.jsp位于webroot/logon/目录下：<br /><\/strong>&nbsp;&nbsp;&nbsp; <em><font color=\"#ff6600\">&lt;body&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;table border=&quot;0&quot;&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;Login:&lt;/td&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;bean:write name=&quot;ID&quot; /&gt;&lt;/td&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;Password:&lt;/td&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;bean:write name=&quot;password&quot; /&gt;&lt;/td&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td colspan=&quot;2&quot; align=&quot;center&quot;&gt;&lt;/td&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/table&gt;<br />&nbsp; &lt;/body&gt;<\/font><\/em><\/p>\r\n<p>在这种情况下，访问login.jsp时出现错误：<br /><strong><font color=\"#ff0000\">javax.servlet.ServletException: Cannot retrieve mapping for action /logon/logon<br />&nbsp;org.apache.jasper.runtime.PageContextImpl.doHandlePageException(PageContextImpl.java:825)<br />&nbsp;org.apache.jasper.runtime.PageContextImpl.handlePageException(PageContextImpl.java:758)<\/font><\/strong><br />&nbsp;......................................................................................<\/p>\r\n<p>下面来看看html:form标签是怎样对action属性处理的：<br />&nbsp;<em><font color=\"#ff6600\">/**<br />&nbsp;&nbsp;&nbsp;&nbsp; * Return the form action converted into a server-relative URL.<br />&nbsp;&nbsp;&nbsp;&nbsp; */<br />&nbsp;&nbsp;&nbsp; public static String getActionMappingURL(String action, PageContext pageContext) {<\/font><\/em><\/p>\r\n<p><em><font color=\"#ff6600\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HttpServletRequest request = (HttpServletRequest) pageContext.getRequest();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StringBuffer value = new StringBuffer(request.getContextPath());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ModuleConfig config =<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (ModuleConfig) pageContext.getRequest().getAttribute(Globals.MODULE_KEY);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (config != null) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; value.append(config.getPrefix());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;.....................<br />&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (value.toString());<br />&nbsp;&nbsp;&nbsp;&nbsp; }<\/font><\/em><\/p>\r\n<p>&nbsp; 此处的Globals.MODULE_KEY是ActionServlet处理request请求时，根据servletContext取得的prefix放进去的ModuleConfig。<br />&nbsp; 所以，如果prefix为&quot;&quot;的话(即struts默认的模块)，只能从当前默认的ModuleConfig中查询action的路径，上面出现的错误正是这一情况。<\/p>\r\n<p>&nbsp; 这正是多模块之间的切换问题，怎么解决呢？<\/p>\r\n<p>&nbsp; 还没有想到更好的办法；<\/p>\r\n<p>&nbsp; 目前的想到的办法是不要使用html:form标签，不过这样的话，若切换到其它的模块，需要加上模块路径。<br />&nbsp;&nbsp;&nbsp;&nbsp; 在form里的action上写上相对servlet的全路径（包括模块名）:<br />&nbsp; 如 <br />&nbsp;&nbsp;<em><font color=\"#ff6600\">&lt;html:form action=&quot;/logon/logon.do&quot; method=&quot;post&quot; focus=&quot;ID&quot;&gt;<br /><\/font><\/em>&nbsp; 更改为<font color=\"#ff6600\"><em>：&lt;form action=&quot;logon/logon.do&quot; method=&quot;post&quot;&gt;<\/em><\/font><\/p>\r\n<p>&nbsp; 这样，当logon.jsp表单提交时，会切换到logon模块；<\/p>\r\n<p>&nbsp; 还有一种方法，在forward里设置contextRelative=&quot;true&quot;,在path属性里必须指明全路径：<br />&nbsp; 如<font color=\"#ff6600\"><em>：&lt;forward name=&quot;logoutSuccess&quot; path=&quot;/moduleName/index.jsp&quot; contextRelative=&quot;true&quot;&gt;&lt;/forward&gt;<br /><\/em><\/font>&nbsp; 无论当前在哪个模块，这样设置之后，当forward到logoutSuccess时，都会找到相对于servlet下的index.jsp。<\/p>\r\n<p>&nbsp; 无论哪种方法，虽然struts1.1支持多模块编程，但个人认为还不是很方便，当需要更改prefix的时候，不仅仅需要更改web配置文件或更改目录名，<br />&nbsp; 如像这种情况，还需要更改jsp代码或者struts-config配置文件。<\/p>\r\n<p>&nbsp; 据说在struts1.2提供了更好的支持，有待研究。<\/p>"}
{"id":"66fa89a7caa784daa7bcd5916df8e497","title":"android tabHost布局之一 继承TabActivity并以布局文件进行布局","body":"\r\n<p><span style=\"font-size:10px\"><img alt=\"\" src=\"http://hi.csdn.net/attachment/201102/25/0_1298619442S4Ii.gif\"><\/span><\/p>\r\n<p>上面的是最终效果图。<br>\r\n代码结构如下。<\/p>\r\n<p><span style=\"font-size:10px\"><img alt=\"\" src=\"http://hi.csdn.net/attachment/201102/25/0_1298619526j7zl.gif\"><\/span><\/p>\r\n<p><span style=\"font-size:10px\">main.xml代码：<\/span><\/p>\r\n<pre class=\"html\" name=\"code\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;!-- 该布局文件定义了标签的内容部分，该布局文件一定要以FrameLayout为根元素 --&gt;\n&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n\tandroid:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;fill_parent&quot;&gt;\n\t&lt;!-- 第一个标签内容 --&gt;\n\t&lt;LinearLayout android:id=&quot;@+id/widget_layout_Blue&quot;\n\t\tandroid:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;fill_parent&quot;\n\t\tandroid:orientation=&quot;vertical&quot; &gt;\n\t\t&lt;EditText android:id=&quot;@+id/widget34&quot; android:layout_width=&quot;fill_parent&quot;\n\t\t\tandroid:layout_height=&quot;wrap_content&quot; android:text=&quot;EditText&quot;\n\t\t\tandroid:textSize=&quot;18sp&quot;&gt;\n\t\t&lt;/EditText&gt;\n\t\t&lt;Button android:id=&quot;@+id/widget30&quot; android:layout_width=&quot;wrap_content&quot;\n\t\t\tandroid:layout_height=&quot;wrap_content&quot; android:text=&quot;Button&quot;&gt;\n\t\t&lt;/Button&gt;\n\t&lt;/LinearLayout&gt;\n\t&lt;!-- 第二个标签内容 AnalogClock为钟表组件--&gt;\n\t&lt;LinearLayout android:id=&quot;@+id/widget_layout_red&quot;\n\t\tandroid:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;fill_parent&quot;\n\t\tandroid:orientation=&quot;vertical&quot;  &gt;\n\t\t&lt;AnalogClock android:id=&quot;@+id/widget36&quot;\n\t\t\tandroid:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot;&gt;\n\t\t&lt;/AnalogClock&gt;\n\t&lt;/LinearLayout&gt;\n\t&lt;!-- 第三个标签内容 RadioButton必须在RadioGroup中哦 --&gt;\n\t&lt;LinearLayout android:id=&quot;@+id/widget_layout_green&quot;\n\t\tandroid:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;fill_parent&quot;\n\t\tandroid:orientation=&quot;vertical&quot;&gt;\n\t\t&lt;RadioGroup android:id=&quot;@+id/widget43&quot;\n\t\t\tandroid:layout_width=&quot;166px&quot; android:layout_height=&quot;98px&quot;\n\t\t\tandroid:orientation=&quot;vertical&quot;&gt;\n\t\t\t&lt;RadioButton android:id=&quot;@+id/widget44&quot;\n\t\t\t\tandroid:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot;\n\t\t\t\tandroid:text=&quot;RadioButton&quot;&gt;\n\t\t\t&lt;/RadioButton&gt;\n\t\t\t&lt;RadioButton android:id=&quot;@+id/widget45&quot;\n\t\t\t\tandroid:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot;\n\t\t\t\tandroid:text=&quot;RadioButton&quot;&gt;\n\t\t\t&lt;/RadioButton&gt;\n\t\t&lt;/RadioGroup&gt;\n\t&lt;/LinearLayout&gt;\n&lt;/FrameLayout&gt;\n<\/pre>\r\n<p>&nbsp;<\/p>\r\n<br>\r\nTagHostTest.java的代码：<pre class=\"java\" name=\"code\">package cn.com.tagHost.test;\n\nimport android.app.TabActivity;\nimport android.graphics.Color;\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.ViewGroup;\nimport android.widget.TabHost;\n\npublic class TagHostTest extends TabActivity {\n\n\tprivate TabHost myTabhost;\n\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tmyTabhost = this.getTabHost();\n\n\t\t/**\n\t\t * inflate(int resource, ViewGroup root, boolean attachToRoot)\n\t\t * resource 很显然是一个资源索引id\n\t\t * 当attachToRoot为true时，root代表一个可放置于容器中的组件\n\t\t * 当attachToRoot为false时，root仅代表一个存储值的对象\n\t\t * 该方法的意思是，将根据R.layout.main生成的标签View，添加到由myTabhost.getTabContentView()获得的父容器中\n\t\t * LayoutInflater类的inflate方法中有如下片段\n\t\t *  if (root != null &amp;&amp; attachToRoot) {\n                        root.addView(temp, params);\n                    }\n            其中temp是根据resource指定的资源生成的一个和标签有关的view\n\t\t */\n\t\tLayoutInflater.from(this).inflate(R.layout.main,\n\t\t\t\tmyTabhost.getTabContentView(), true);\n\t\tmyTabhost.setBackgroundColor(Color.argb(150, 22, 70, 150));\n\n\t\tmyTabhost.addTab(myTabhost.newTabSpec(&quot;One&quot;)\n\t\t\t\t.setIndicator(&quot;A&quot;).setContent(R.id.widget_layout_Blue));\n\n\t\tmyTabhost.addTab(myTabhost.newTabSpec(&quot;Two&quot;)\n\t\t\t\t.setIndicator(&quot;B&quot;, getResources().getDrawable(R.drawable.icon))\n\t\t\t\t.setContent(R.id.widget_layout_green));\n\n\t\tmyTabhost.addTab(myTabhost.newTabSpec(&quot;Three&quot;)\n\t\t\t\t.setIndicator(&quot;C&quot;, getResources().getDrawable(R.drawable.icon))\n\t\t\t\t.setContent(R.id.widget_layout_red));\n\t}\n}<\/pre>\r\n<p><br>\r\n&nbsp;这种方法实现起来比较简单，看看我们都做了些什么。<br>\r\n&nbsp;<br>\r\n第一步：定义标签内容部分的布局文件，该布局文件必须以FrameLayout为根节点。<br>\r\n&nbsp;<br>\r\n第二步：让activity继承TabActivity,然后实现自己的代码。<br>\r\n<\/p>\r\n<p><br>\r\n&nbsp;<\/p>\r\n"}
{"id":"3d6204455f35761f315b74bf8ea01de2","title":"寻找兔子算法（java实现）","body":"\r\n<div style=\"font-family:宋体,Verdana,Arial,Helvetica,sans-serif; line-height:18px; font-size:15px; text-align:center\">\r\n寻找兔子算法<\/div>\r\n<br>\r\n<div style=\"font-family:宋体,Verdana,Arial,Helvetica,sans-serif; line-height:18px; font-size:15px\">\r\n<span style=\"white-space:pre\"><\/span>今天偶然看到一个小学时经常看到的数学题目，算法很新颖（我自己给他命名为寻找兔子算法），所以就用java实现了一下，实现的很简单纯属自娱，如果你也感觉算法很巧妙请支持一下···<\/div>\r\n<div style=\"font-family:宋体,Verdana,Arial,Helvetica,sans-serif; line-height:18px; font-size:15px\">\r\n<span style=\"white-space:pre\"><\/span>题目描述：已知有鸡和兔15只，共有40只脚，问鸡和兔各有几只？<\/div>\r\n<div style=\"font-family:宋体,Verdana,Arial,Helvetica,sans-serif; line-height:18px; font-size:15px\">\r\n<span style=\"white-space:pre\"><\/span>算法：假设鸡和兔训练有素，吹一声哨，它们抬起一只脚，40-15=25。再吹一声哨，它们又抬起 一只脚，25-15=10，这时鸡都一屁股坐地上了，兔子还两只脚立着。所以，兔子有10÷2=5只，鸡有15-5=10只。注意这种算法不用二元一次方程！！！<\/div>\r\n<div style=\"font-family:宋体,Verdana,Arial,Helvetica,sans-serif; line-height:18px; font-size:15px\">\r\npackage com.abin;<br>\r\nimport java.util.Scanner;<br>\r\npublic class FindRabbit {<br>\r\n<br>\r\n<br>\r\n<span style=\"white-space:pre\"><\/span>public static void main(String[] args) {<br>\r\n<span style=\"white-space:pre\"><\/span>int num_animals = 0;//动物的总数<br>\r\n<span style=\"white-space:pre\"><\/span>int num_legs =0;//腿的总数<br>\r\n<span style=\"white-space:pre\"><\/span>int num_rabbits = 0;//兔子的总数<br>\r\n<span style=\"white-space:pre\"><\/span>Scanner scanner = null;<br>\r\n<span style=\"white-space:pre\"><\/span>System.out.println(&quot;请输入动物的总数和腿的总数中间使用空&#26684;分开：&quot;);<br>\r\n<span style=\"white-space:pre\"><\/span>scanner = new Scanner(System.in);<br>\r\n<span style=\"white-space:pre\"><\/span>if(scanner.hasNextInt())<br>\r\n<span style=\"white-space:pre\"><\/span>num_animals = (int) scanner.nextInt();<br>\r\n<span style=\"white-space:pre\"><\/span>if(scanner.hasNextInt())<br>\r\n<span style=\"white-space:pre\"><\/span>num_legs = (int) scanner.nextInt();<br>\r\n<span style=\"white-space:pre\"><\/span>num_rabbits = findRabbit(num_animals,num_legs);<br>\r\n<span style=\"white-space:pre\"><\/span>if(num_rabbits!=0)<br>\r\n<span style=\"white-space:pre\"><\/span>System.out.println(&quot;兔子的个数为:&quot;&#43;num_rabbits);<br>\r\n<span style=\"white-space:pre\"><\/span><br>\r\n<span style=\"white-space:pre\"><\/span>}<br>\r\n<span style=\"white-space:pre\"><\/span>public static int findRabbit(int num_animals, int num_legs){<br>\r\n<span style=\"white-space:pre\"><\/span>if (num_animals&gt;=num_legs) {<br>\r\n<span style=\"white-space:pre\"><\/span>System.out.println(&quot;请检查给定参数···&quot;);<br>\r\n<span style=\"white-space:pre\"><\/span>}else{<br>\r\n<span style=\"white-space:pre\"><\/span>return (num_legs-(2*num_animals))/2;<br>\r\n<span style=\"white-space:pre\"><\/span>}<br>\r\n<span style=\"white-space:pre\"><\/span>return 0;<br>\r\n<span style=\"white-space:pre\"><\/span>}<br>\r\n<br>\r\n<br>\r\n}<\/div>\r\n"}
{"id":"bd4d983621d7ef8f0645ddedbf8dabc5","title":"[sql server] 问题总结11---按某一字段分组取最大(小)值所在行的数据","body":"<p><span style=\"COLOR: #008080\"><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">按某一字段分组取最大(小)值所在行的数据<\/span><span style=\"color: #008080;\"><br />--<\/span><span style=\"color: #008080;\">(爱新觉罗.毓华(十八年风雨,守得冰山雪莲花开) 2007-10-23于浙江杭州)<\/span><span style=\"color: #008080;\"><br />/*<\/span><span style=\"color: #008080;\"><br />数据如下：<br />name val memo<br />a&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp; a2(a的第二个值)<br />a&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp; a1--a的第一个值<br />a&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp; a3:a的第三个值<br />b&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp; b1--b的第一个值<br />b&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp; b3:b的第三个值<br />b&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp; b2b2b2b2<br />b&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp; b4b4<br />b&nbsp;&nbsp;&nbsp; 5&nbsp;&nbsp; b5b5b5b5b5<br /><\/span><span style=\"color: #008080;\">*/<\/span><span style=\"color: #000000;\"><br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">创建表并插入数据：<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">create<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">table<\/span><span style=\"color: #000000;\"> tb(name <\/span><span style=\"color: #0000ff;\">varchar<\/span><span style=\"color: #000000;\">(<\/span><span style=\"font-weight: bold; color: #800000;\">10<\/span><span style=\"color: #000000;\">),val <\/span><span style=\"color: #0000ff;\">int<\/span><span style=\"color: #000000;\">,memo <\/span><span style=\"color: #0000ff;\">varchar<\/span><span style=\"color: #000000;\">(<\/span><span style=\"font-weight: bold; color: #800000;\">20<\/span><span style=\"color: #000000;\">))<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">2<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a2(a的第二个值)<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a1--a的第一个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">3<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a3:a的第三个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b1--b的第一个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">3<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b3:b的第三个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">2<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b2b2b2b2<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">4<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b4b4<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">5<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b5b5b5b5b5<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">go<\/span><span style=\"color: #000000;\"><br /><br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">一、按name分组取val最大的值所在行的数据。<\/span><span style=\"color: #008080;\"><br />--<\/span><span style=\"color: #008080;\">方法1：<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">max<\/span><span style=\"color: #000000;\">(val) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> a.name) <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name<br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">方法2：<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">not<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">exists<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #808080;\">and<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">&gt;<\/span><span style=\"color: #000000;\"> a.val)<br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">方法3：<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a,(<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> name,<\/span><span style=\"color: #ff00ff;\">max<\/span><span style=\"color: #000000;\">(val) val <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">group<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> name) b <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> b.name <\/span><span style=\"color: #808080;\">and<\/span><span style=\"color: #000000;\"> a.val <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> b.val <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name<br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">方法4：<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">inner<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">join<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> name , <\/span><span style=\"color: #ff00ff;\">max<\/span><span style=\"color: #000000;\">(val) val <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">group<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> name) b <\/span><span style=\"color: #0000ff;\">on<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> b.name <\/span><span style=\"color: #808080;\">and<\/span><span style=\"color: #000000;\"> a.val <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> b.val <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name<br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">方法5<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">&gt;<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">count<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\">) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #808080;\">and<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">&gt;<\/span><span style=\"color: #000000;\"> a.val ) <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name<br /><\/span><span style=\"color: #008080;\">/*<\/span><span style=\"color: #008080;\"><br />name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; val&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />---------- ----------- -------------------- <br />a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a3:a的第三个值<br />b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b5b5b5b5b5<br /><\/span><span style=\"color: #008080;\">*/<\/span><span style=\"color: #000000;\"><br /><br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">二、按name分组取val最小的值所在行的数据。<\/span><span style=\"color: #008080;\"><br />--<\/span><span style=\"color: #008080;\">方法1：<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">min<\/span><span style=\"color: #000000;\">(val) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> a.name) <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name<br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">方法2：<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">not<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">exists<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #808080;\">and<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">&lt;<\/span><span style=\"color: #000000;\"> a.val)<br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">方法3：<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a,(<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> name,<\/span><span style=\"color: #ff00ff;\">min<\/span><span style=\"color: #000000;\">(val) val <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">group<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> name) b <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> b.name <\/span><span style=\"color: #808080;\">and<\/span><span style=\"color: #000000;\"> a.val <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> b.val <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name<br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">方法4：<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">inner<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">join<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> name , <\/span><span style=\"color: #ff00ff;\">min<\/span><span style=\"color: #000000;\">(val) val <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">group<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> name) b <\/span><span style=\"color: #0000ff;\">on<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> b.name <\/span><span style=\"color: #808080;\">and<\/span><span style=\"color: #000000;\"> a.val <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> b.val <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name<br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">方法5<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">&gt;<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">count<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\">) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #808080;\">and<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">&lt;<\/span><span style=\"color: #000000;\"> a.val) <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name<br /><\/span><span style=\"color: #008080;\">/*<\/span><span style=\"color: #008080;\"><br />name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; val&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />---------- ----------- -------------------- <br />a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a1--a的第一个值<br />b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b1--b的第一个值<br /><\/span><span style=\"color: #008080;\">*/<\/span><span style=\"color: #000000;\"><br /><br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">三、按name分组取第一次出现的行所在的数据。<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">top<\/span><span style=\"color: #000000;\"> <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> a.name) <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name<br /><\/span><span style=\"color: #008080;\">/*<\/span><span style=\"color: #008080;\"><br />name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; val&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />---------- ----------- -------------------- <br />a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a2(a的第二个值)<br />b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b1--b的第一个值<br /><\/span><span style=\"color: #008080;\">*/<\/span><span style=\"color: #000000;\"><br /><br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">四、按name分组随机取一条数据。<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">top<\/span><span style=\"color: #000000;\"> <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">newid<\/span><span style=\"color: #000000;\">()) <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name<br /><\/span><span style=\"color: #008080;\">/*<\/span><span style=\"color: #008080;\"><br />name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; val&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />---------- ----------- -------------------- <br />a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a1--a的第一个值<br />b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b5b5b5b5b5<br /><\/span><span style=\"color: #008080;\">*/<\/span><span style=\"color: #000000;\"><br /><br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">五、按name分组取最小的两个(N个)val<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> <\/span><span style=\"font-weight: bold; color: #800000;\">2<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">&gt;<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">count<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\">) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #808080;\">and<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">&lt;<\/span><span style=\"color: #000000;\"> a.val ) <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name,a.val<br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">in<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">top<\/span><span style=\"color: #000000;\"> <\/span><span style=\"font-weight: bold; color: #800000;\">2<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name<\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\">a.name <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> val) <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name,a.val<br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">exists<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">count<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\">) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #808080;\">and<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">&lt;<\/span><span style=\"color: #000000;\"> a.val <\/span><span style=\"color: #0000ff;\">having<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">Count<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\">) <\/span><span style=\"color: #808080;\">&lt;<\/span><span style=\"color: #000000;\"> <\/span><span style=\"font-weight: bold; color: #800000;\">2<\/span><span style=\"color: #000000;\">) <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name<br /><\/span><span style=\"color: #008080;\">/*<\/span><span style=\"color: #008080;\"><br />name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; val&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />---------- ----------- -------------------- <br />a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a1--a的第一个值<br />a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a2(a的第二个值)<br />b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b1--b的第一个值<br />b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b2b2b2b2<br /><\/span><span style=\"color: #008080;\">*/<\/span><span style=\"color: #000000;\"><br /><br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">六、按name分组取最大的两个(N个)val<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> <\/span><span style=\"font-weight: bold; color: #800000;\">2<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">&gt;<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">count<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\">) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #808080;\">and<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">&gt;<\/span><span style=\"color: #000000;\"> a.val ) <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name,a.val<\/span><\/span><\/p>\r\n<p><span style=\"COLOR: #008080\"><span style=\"color: #000000;\">--<span style=\"background-color: #ffff00;\">提取出每行的 name 和val 去数据库中找比自己小的个数。如果小于2个，代表自己就是满足条件的<\/span><\/span><\/span><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><span style=\"COLOR: #008080\"><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">in<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">top<\/span><span style=\"color: #000000;\"> <\/span><span style=\"font-weight: bold; color: #800000;\">2<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name<\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\">a.name <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #0000ff;\">desc<\/span><span style=\"color: #000000;\">) <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by <\/span><\/span><span style=\"COLOR: #008080\"><span style=\"color: #000000;\">a.name,a.val<\/span><\/span><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><span style=\"COLOR: #008080\"><span style=\"color: #ff0000;\"><span style=\"background-color: #ffff00;\">详细说下这个方法<\/span><\/span><\/span><\/p>\r\n<p><span style=\"COLOR: #008080\"><span style=\"color: #ff0000;\"><span style=\"background-color: #ffff00;\">select a.* from tb a where val in --1段<br />(select top 2 val from tb where name=a.name order by val) --2段<br />order by a.name,a.val --3段<\/span><\/span><\/span><\/p>\r\n<p><span style=\"COLOR: #008080\"><span style=\"color: #ff0000;\"><span style=\"background-color: #ffff00;\">思路 先看2段。里面是按每个名称排序，然后选重最小的val的值<br />然后1段是从tb表里面 选出符合val值的记录<br />3段 是把提出出来的数据排下序<\/span><\/span><\/span><\/p>\r\n<p><span style=\"COLOR: #008080\"><span style=\"color: #ff0000;\"><span style=\"background-color: #ffff00;\">开始担心 之限制val会会出现 其他name的值也有相同的情况，然后提起的不是很准确<br />类似于 <br />select a.* from tb a where val in (1,2,4,3)<br />开始认为是和这个类似，如果要是和这个类似的话，结果确实不对。<br />后来仔细思考后 得到结果，当2段里面 提取val的时候已经限制了名字，也就是说 <br />当name为一个值的时候，只会出项和他对应的2个最小val<\/span><\/span><\/span><\/p>\r\n<p><span style=\"COLOR: #008080\"><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> a.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb a <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">exists<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">count<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\">) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> a.name <\/span><span style=\"color: #808080;\">and<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">&gt;<\/span><span style=\"color: #000000;\"> a.val <\/span><span style=\"color: #0000ff;\">having<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">Count<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\">) <\/span><span style=\"color: #808080;\">&lt;<\/span><span style=\"color: #000000;\"> <\/span><span style=\"font-weight: bold; color: #800000;\">2<\/span><span style=\"color: #000000;\">) <\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> a.name<br /><\/span><span style=\"color: #008080;\">/*<\/span><span style=\"color: #008080;\"><br />name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; val&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />---------- ----------- -------------------- <br />a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a2(a的第二个值)<br />a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a3:a的第三个值<br />b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b4b4<br />b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b5b5b5b5b5<br /><\/span><span style=\"color: #008080;\">*/<\/span><span style=\"color: #000000;\"><br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">七，如果整行数据有重复，所有的列都相同。<\/span><span style=\"color: #008080;\"><br />/*<\/span><span style=\"color: #008080;\"><br />数据如下：<br />name val memo<br />a&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp; a2(a的第二个值)<br />a&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp; a1--a的第一个值<br />a&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp; a1--a的第一个值<br />a&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp; a3:a的第三个值<br />a&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp; a3:a的第三个值<br />b&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp; b1--b的第一个值<br />b&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp; b3:b的第三个值<br />b&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp; b2b2b2b2<br />b&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp; b4b4<br />b&nbsp;&nbsp;&nbsp; 5&nbsp;&nbsp; b5b5b5b5b5<br /><\/span><span style=\"color: #008080;\">*/<\/span><span style=\"color: #000000;\"><br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">在sql server 2000中只能用一个临时表来解决，生成一个自增列，先对val取最大或最小，然后再通过自增列来取数据。<\/span><span style=\"color: #008080;\"><br />--<\/span><span style=\"color: #008080;\">创建表并插入数据：<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">create<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">table<\/span><span style=\"color: #000000;\"> tb(name <\/span><span style=\"color: #0000ff;\">varchar<\/span><span style=\"color: #000000;\">(<\/span><span style=\"font-weight: bold; color: #800000;\">10<\/span><span style=\"color: #000000;\">),val <\/span><span style=\"color: #0000ff;\">int<\/span><span style=\"color: #000000;\">,memo <\/span><span style=\"color: #0000ff;\">varchar<\/span><span style=\"color: #000000;\">(<\/span><span style=\"font-weight: bold; color: #800000;\">20<\/span><span style=\"color: #000000;\">))<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">2<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a2(a的第二个值)<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a1--a的第一个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a1--a的第一个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">3<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a3:a的第三个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">3<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a3:a的第三个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b1--b的第一个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">3<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b3:b的第三个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">2<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b2b2b2b2<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">4<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b4b4<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">5<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b5b5b5b5b5<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">go<\/span><span style=\"color: #000000;\"><br /><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> , px <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">identity<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #0000ff;\">int<\/span><span style=\"color: #000000;\">,<\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\">,<\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\">) <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tmp <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb<br /><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> m.name,m.val,m.memo <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"><br />(<br />&nbsp; <\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> t.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tmp t <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">min<\/span><span style=\"color: #000000;\">(val) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tmp <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> t.name)<br />) m <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> px <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">min<\/span><span style=\"color: #000000;\">(px) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"><br />(<br />&nbsp; <\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> t.<\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tmp t <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> val <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">min<\/span><span style=\"color: #000000;\">(val) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tmp <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> t.name)<br />) n <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> n.name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> m.name)<br /><br /><\/span><span style=\"color: #0000ff;\">drop<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">table<\/span><span style=\"color: #000000;\"> tb,tmp<br /><br /><\/span><span style=\"color: #008080;\">/*<\/span><span style=\"color: #008080;\"><br />name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; val&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memo<br />---------- ----------- --------------------<br />a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a1--a的第一个值<br />b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b1--b的第一个值<br /><br />(2 行受影响)<br /><\/span><span style=\"color: #008080;\">*/<\/span><span style=\"color: #000000;\"><br /><\/span><span style=\"color: #008080;\">--<\/span><span style=\"color: #008080;\">在sql server 2005中可以使用row_number函数，不需要使用临时表。<\/span><span style=\"color: #008080;\"><br />--<\/span><span style=\"color: #008080;\">创建表并插入数据：<\/span><span style=\"color: #008080;\"><br /><\/span><span style=\"color: #0000ff;\">create<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">table<\/span><span style=\"color: #000000;\"> tb(name <\/span><span style=\"color: #0000ff;\">varchar<\/span><span style=\"color: #000000;\">(<\/span><span style=\"font-weight: bold; color: #800000;\">10<\/span><span style=\"color: #000000;\">),val <\/span><span style=\"color: #0000ff;\">int<\/span><span style=\"color: #000000;\">,memo <\/span><span style=\"color: #0000ff;\">varchar<\/span><span style=\"color: #000000;\">(<\/span><span style=\"font-weight: bold; color: #800000;\">20<\/span><span style=\"color: #000000;\">))<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">2<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a2(a的第二个值)<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a1--a的第一个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a1--a的第一个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">3<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a3:a的第三个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">3<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">a3:a的第三个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">1<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b1--b的第一个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">3<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b3:b的第三个值<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">2<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b2b2b2b2<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">4<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b4b4<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">insert<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">into<\/span><span style=\"color: #000000;\"> tb <\/span><span style=\"color: #0000ff;\">values<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp;&nbsp; <\/span><span style=\"font-weight: bold; color: #800000;\">5<\/span><span style=\"color: #000000;\">,&nbsp;&nbsp; <\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #ff0000;\">b5b5b5b5b5<\/span><span style=\"color: #ff0000;\">'<\/span><span style=\"color: #000000;\">)<br /><\/span><span style=\"color: #0000ff;\">go<\/span><span style=\"color: #000000;\"><br /><br /><\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> m.name,m.val,m.memo <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"><br />(<br />&nbsp; <\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> , px <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> row_number() <\/span><span style=\"color: #0000ff;\">over<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> name , val) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb<br />) m <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> px <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> (<\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #ff00ff;\">min<\/span><span style=\"color: #000000;\">(px) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"><br />(<br />&nbsp; <\/span><span style=\"color: #0000ff;\">select<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #808080;\">*<\/span><span style=\"color: #000000;\"> , px <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> row_number() <\/span><span style=\"color: #0000ff;\">over<\/span><span style=\"color: #000000;\">(<\/span><span style=\"color: #0000ff;\">order<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">by<\/span><span style=\"color: #000000;\"> name , val) <\/span><span style=\"color: #0000ff;\">from<\/span><span style=\"color: #000000;\"> tb<br />) n <\/span><span style=\"color: #0000ff;\">where<\/span><span style=\"color: #000000;\"> n.name <\/span><span style=\"color: #808080;\">=<\/span><span style=\"color: #000000;\"> m.name)<br /><br /><\/span><span style=\"color: #0000ff;\">drop<\/span><span style=\"color: #000000;\"> <\/span><span style=\"color: #0000ff;\">table<\/span><span style=\"color: #000000;\"> tb<br /><br /><\/span><span style=\"color: #008080;\">/*<\/span><span style=\"color: #008080;\"><br />name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; val&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memo<br />---------- ----------- --------------------<br />a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a1--a的第一个值<br />b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b1--b的第一个值<br /><br />(2 行受影响)<br /><\/span><span style=\"color: #008080;\">*/<\/span><span style=\"color: #000000;\"><br /><\/span><\/span><\/p>\r\n<p>&nbsp;<\/p>"}
{"id":"175f0cc13a08b88e909c79ff072279c8","title":"maven GroupID、ArtifactID指的是什么，不是很明白。最好举个例子。","body":"\r\n&nbsp; &nbsp; &nbsp;&nbsp;\r\n<div class=\"wgt-ask accuse-response line mb-5\" id=\"wgt-ask\" style=\"margin-bottom:5px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(241,241,241); padding:20px 30px 10px; color:rgb(51,51,51); font-family:arial,宋体,sans-serif,'Microsoft YaHei',tahoma; font-size:14px; line-height:24px\">\r\n<h1 class=\"mb-5\" style=\"margin:0px 0px 5px; padding:0px; font-size:16px; line-height:26px; font-family:'Microsoft YaHei',SimHei,arial; word-break:break-all\">\r\n<span class=\"ask-title\" style=\"display:inline-block; width:595px; overflow:hidden\"><span style=\"white-space:pre\"><\/span>maven GroupID和ArtifactID填什么<\/span><\/h1>\r\n<div class=\"line f-aid mb-10\" id=\"ask-info\" style=\"margin-bottom:10px; font-size:12px; color:rgb(153,153,153)\">\r\n<span class=\"grid-r ask-time\" style=\"display:inline; float:right; width:165px; text-align:right\"><\/span><ins class=\"accuse-area\" style=\"text-decoration:none\"><\/ins><span style=\"white-space:pre\"><\/span>2012-12-26 21:41<a target=\"_blank\" class=\"user-name\" rel=\"nofollow\" href=\"http://www.baidu.com/p/%E7%A9%BA%E7%A9%BA%E5%81%A5%E5%AE%A2?from=zhidao\" target=\"_blank\" style=\"color:rgb(45,100,179); text-decoration:none\">空空健客<\/a>&nbsp;<span class=\"f-pipe\" style=\"color:rgb(204,204,204); margin:0px 7px\">|<\/span>&nbsp;<span class=\"classinfo f-simsun\" style=\"font-family:宋体\">分类：<a target=\"_blank\" class=\"f-aid\" href=\"http://zhidao.baidu.com/browse/870\" style=\"color:rgb(153,153,153); text-decoration:none\">JAVA相关<\/a>&nbsp;<\/span><span id=\"v-times\" class=\"f-pipe\" style=\"color:rgb(204,204,204); margin:0px 7px\">|<\/span><span class=\"browse-times\">&nbsp;浏览4474次<\/span><\/div>\r\n<\/div>\r\n<div class=\"wgt-best \" id=\"best-answer-1290267060\" style=\"border-top-width:1px; border-top-style:solid; border-top-color:rgb(233,238,227); border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(233,238,227); background-color:rgb(241,254,221); padding:0px 30px 20px; color:rgb(51,51,51); font-family:arial,宋体,sans-serif,'Microsoft YaHei',tahoma; font-size:14px; line-height:24px\">\r\n<div class=\"bd answer\" id=\"answer-1290267060\">\r\n<div class=\"line content\" style=\"word-wrap:break-word; word-break:break-all\">\r\n<pre id=\"best-content-1290267060\" class=\"best-text mb-10\" style=\"margin-top:0px; margin-bottom:10px; padding:0px; font-family:arial,'courier new',courier,宋体,monospace; white-space:pre-wrap; word-wrap:break-word\">       GroupID是<a target=\"_blank\" class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E9%A1%B9%E7%9B%AE%E7%BB%84%E7%BB%87&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" style=\"color:rgb(45,100,179); text-decoration:none\">项目组织<\/a>唯一的<a target=\"_blank\" class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E6%A0%87%E8%AF%86%E7%AC%A6&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" style=\"color:rgb(45,100,179); text-decoration:none\">标识符<\/a>，实际对应JAVA的包的结构，是main目录里java的<a target=\"_blank\" class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" style=\"color:rgb(45,100,179); text-decoration:none\">目录结构<\/a>。\n\n      ArtifactID就是项目的唯一的<a target=\"_blank\" class=\"inner-link decor-none\" href=\"http://zhidao.baidu.com/search?word=%E6%A0%87%E8%AF%86%E7%AC%A6&amp;fr=qb_search_exp&amp;ie=utf8\" target=\"_blank\" rel=\"nofollow\" style=\"color:rgb(45,100,179); text-decoration:none\">标识符<\/a>，实际对应项目的名称，就是项目根目录的名称。\n一般GroupID就是填com.leafive.test这样子。<\/pre>\r\n<dl class=\"thank line pt-5 pb-5\" style=\"margin:0px; padding:5px 0px\">\r\n<div class=\"wgt-ask accuse-response line mb-5\" id=\"wgt-ask\" style=\"margin-bottom:5px; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(241,241,241); padding:20px 30px 10px; color:rgb(51,51,51); font-family:arial,宋体,sans-serif,'Microsoft YaHei',tahoma; font-size:14px; line-height:24px\">\r\n<h1 class=\"mb-5\" style=\"margin:0px 0px 5px; padding:0px; font-size:16px; line-height:26px; font-family:'Microsoft YaHei',SimHei,arial; word-break:break-all\">\r\n<span class=\"ask-title\" style=\"display:inline-block; width:595px; overflow:hidden\">maven GroupID、ArtifactID指的是什么，不是很明白。最好举个例子。<\/span><\/h1>\r\n<div class=\"line f-aid mb-10\" id=\"ask-info\" style=\"margin-bottom:10px; font-size:12px; color:rgb(153,153,153)\">\r\n<span class=\"grid-r ask-time\" style=\"display:inline; float:right; width:165px; text-align:right\"><\/span><ins class=\"accuse-area\" style=\"text-decoration:none\"><\/ins>2013-04-25 17:21<a target=\"_blank\" class=\"user-name\" rel=\"nofollow\" href=\"http://www.baidu.com/p/%E9%99%88%E5%B9%B4%E8%80%81%E4%BA%95?from=zhidao\" target=\"_blank\" style=\"color:rgb(45,100,179); text-decoration:none\">陈年老井<\/a>&nbsp;<span class=\"f-pipe\" style=\"color:rgb(204,204,204); margin:0px 7px\">|<\/span>&nbsp;<span class=\"classinfo f-simsun\" style=\"font-family:宋体\">分类：<a target=\"_blank\" class=\"f-aid\" href=\"http://zhidao.baidu.com/browse/870\" style=\"color:rgb(153,153,153); text-decoration:none\">JAVA相关<\/a>&nbsp;<\/span><span id=\"v-times\" class=\"f-pipe\" style=\"color:rgb(204,204,204); margin:0px 7px\">|<\/span><span class=\"browse-times\">&nbsp;浏览764次<\/span><\/div>\r\n<\/div>\r\n<div class=\"wgt-best \" id=\"best-answer-1374995912\" style=\"border-top-width:1px; border-top-style:solid; border-top-color:rgb(233,238,227); border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(233,238,227); background-color:rgb(241,254,221); padding:0px 30px 20px; color:rgb(51,51,51); font-family:arial,宋体,sans-serif,'Microsoft YaHei',tahoma; font-size:14px; line-height:24px\">\r\n<div class=\"bd answer\" id=\"answer-1374995912\">\r\n<div class=\"line content\" style=\"word-wrap:break-word; word-break:break-all\">\r\n<pre id=\"best-content-1374995912\" class=\"best-text mb-10\" style=\"margin-top:0px; margin-bottom:10px; padding:0px; font-family:arial,'courier new',courier,宋体,monospace; white-space:pre-wrap; word-wrap:break-word\"><pre id=\"best-content-1374995912\" class=\"best-text mb-10\" style=\"margin-top:0px; margin-bottom:10px; padding:0px; font-family:arial,'courier new',courier,宋体,monospace; white-space:pre-wrap; word-wrap:break-word; color:rgb(51,51,51); font-size:14px; line-height:24px; background-color:rgb(241,254,221)\">GroupID  就像是公司、部门\nArtifactID 就像是不同的项目<\/pre><\/pre>\r\n<dl class=\"thank line pt-5 pb-5\" style=\"margin:0px; padding:5px 0px\"><dt class=\"thank-title grid f-12\" style=\"margin:0px; padding:0px; display:inline; float:left; font-size:12px; color:rgb(94,187,11)\">\r\n提问者评价<\/dt><dd class=\"grid ml-10\" style=\"margin:0px 0px 0px 10px; padding:0px; display:inline; float:left\">\r\n<pre style=\"margin-top:0px; margin-bottom:0px; padding:0px; font-family:arial,'courier new',courier,宋体,monospace; white-space:pre-wrap; word-wrap:break-word; width:520px\">谢谢!<\/pre>\r\n<\/dd><\/dl>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<br>\r\n<\/dl>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n"}
{"id":"5a478a591607faa5210427f62d781e93","title":"IBM操作系统发展史-IBM 操作系统（OS）历史和时间线","body":"<p>IBM操作系统发展史-IBM 操作系统（OS）历史和时间线<\/p>  <p>国际商务机（IBM）公司在计算机的发展历史上扮演了一个主要角色。它的计算机相关技术覆盖了硬件、操作系统和应用程序。在下面的表格中，我们列出了由 IBM 在过去的几十年中为大型机、桌面型计算机和基于 Unix 的针对中型和大型计算机主要的计算机操作系统。<\/p>  <p>日期 操作系统 计算机 备注    <br />早期 OS     <br />1956 GM-NAA I/O IBM 704   <br />1959 SOS SHARE OS 科学用计算机   <br />1967 ACP Airline 系统/360 Airline 应用程序 针对 airline 应用程序的一个特殊版本的操作系统     <br />大型机操作系统轨迹     <br />1960 IBSYS IBM 7090和7094   <br />1964 OS/360 系统/360 IBM 颁布系统/360.     <br />1965 TOS Tape 系统/360   <br />1966 DOS/360 系统/360   <br />1972 MFT 系统/360、370 系统/370在1970颁布     <br />1972 VS1 系统/370 操作系统/360的变量     <br />1972 MVT 系统/370 OS/360的变量     <br />1973 SVS 系统/370 从 MVT 重命名     <br />1974 VS2 系统/370 基于 VS1 和 MVT     <br />1975 MVS（Multiple Virtual Storage） 系统/370 从 VS2 r3 重命名     <br />1977 MVS/SP 系统/370   <br />1979 MVS/370 系统/370 从 MVS 的重命名     <br />1981 MVS/XA 系统/370 从 MVS 重命名     <br />1988 MVS/ESA 系统/370 从 MVS 重命名     <br />1995 MVS/ESA SP5R2 系统/370, 390 IBM 颁布系统/390来替代系统/370. 这是 MVS 的最后版本.     <br />1996 OS/390 v1 系统/390 从 MVS 重新改的带有 UNIX 系统服务的品牌     <br />1997 OS/390 v2 系统/390 OS/390的最终版本是在2000年的 OS/390 v2.10     <br />2001 z/OS v1（zSeries/操作系统） 针对系统/390 和 zSeries 在2000年，IBM 颁布了 zSeries 来替代系统/390。z/OS 是 OS/390 带有64位支持的继任者。     <br />2007 z/OS v1.9 针对系统/390 和 zSeries 当前版本     <br />大型机操作系统轨迹     <br />1966 CP-40 针对系统/360 基于 MIT CTSS     <br />1968 CP-67 针对系统/360   <br />1968 CP/CMS v1 针对系统/360   <br />1969 CP/CMS v2 针对系统/360   <br />1971 CP/CMS v3 针对系统/360   <br />1972 VM/CMS v1 针对系统/370 f CP/CMS 的一个 System/370 执行     <br />1974 VM/CMS v2 针对系统/370   <br />1976 VM/CMS v3 针对系统/370   <br />1976 SEPP and BSEPP 针对系统/370 系统扩展程序产品     <br />1977 VM/CMS v5 针对系统/370 带有新的系统扩展，BSEPP 和 SEPP     <br />1979 VM/CMS v6 针对系统/370 BSEPP 和 SEPP 的版本2     <br />1980 VM/SP1 针对系统/370   <br />1981 VM/XA 针对系统/370扩展 架构   <br />1981 VM/HPO 针对系统/370 更新到 VM/SP 来增强它来支持运行在370模式下高端 S/370 处理器     <br />1982 VM/SP2 针对系统/370   <br />1983 VM/SP3 针对系统/370   <br />1985 VM/SP4 针对系统/370   <br />1985 VM XA/SF 针对系统/370 扩展架构   <br />1987 VM/SPv5 针对系统/370   <br />1988 VM/SPv6 针对系统/370   <br />1989 VM/IS 针对系统/370   <br />1989 VM XA/SP1 and 2 针对系统/370 扩展架构   <br />1990 VM/ESA v1 针对系统/370, 390 IBM 颁布系统/390.     <br />1995 VM/ESA v2 针对系统/390   <br />2000 zVM v3 IBM 的 zSeries 和系统 z9 计算机 IBM 颁布 zSeries。zVM 是基于 VM/ESA v2 r4 的.     <br />2001 zVM v4 zSeries 和系统 z9 计算机   <br />2004 zVM v5 zSeries 和系统 z9 计算机   <br />2007 zVM v5.3 zSeries 和系统 z9 计算机 最新的版本     <br />桌面操作系统     <br />1987 OS/2 1.0 IBM PS/2 / Intel 80286处理器 与微软合并     <br />1991 OS/2 1.3 IBM PS/2 / Intel 80286 处理器   <br />1992 OS/2 2.0 IBM PS/2 / Intel 80386 处理器   <br />1994 OS/2 3.0 （or OS/2 Warp） 支持桌面和服务器两者 3.0添加网络性能，Windows NT 基于 OS/2 3.0     <br />1996 OS/2 4.0 （or OS/2 Warp 4） 支持桌面和服务器两者 添加了 Java 和语音识别软件     <br />2001 OS/2 4.52 支持桌面和服务器两者 OS/2 的上一个 IBM 版本。IBM 已经在2005年底停止出售 IS/2 并在2006年底停止 OS/2     <br />基于 Unix 的操作系统     <br />1986 AIX v1（高级 IBM UNIX） IBM PS/2 微信道架构 PCs 和 IBM RT. 基于 Unix 系统 V 版本3     <br />1987 AIX v2 针对6150序列 IBM RT 系统   <br />1988 AIX/370 针对大型机系统/370   <br />1990 AIX v3 IBM POWER 架构   <br />1994 AIX v4 针对 PowerPC 架构和 PCI 总线   <br />2001 AIX v5L 针对 IA64 架构和 PowerPC 4 & 5、970   <br />2007 AIX v6 POWER6、系统 i5 在 POWER6 中分区灵活性     <br />中间范围的计算机     <br />1988 OS/400 v1 AS/400   <br />1991 OS/400 v1 AS/400   <br />1994 OS/400 v3 AS/400   <br />1997 OS/400 v4 AS/400   <br />2001 OS/400 v5 AS/400 或 iSeries 系统 IBM 重新设计品牌 AS/400 为 iSeries.     <br />2005 OS/400 v5.4 iSeries 系统 OS/400 的上一个版本是 OS/400 v5.4.     <br />2006 i5/OS v5r4 系统 i IBM 重新设计品牌 iSeries 为系统i。i5/OS 是 OS/400 的品牌重设计。AIX 和 Linux 共存。     <br />2008 i5/OS v6r1 系统 i<\/p>"}
{"id":"0947c2167cdcf83ee1e18ade5142c7e8","title":"GNU Gengetopt 2.10 Usage 随便翻点东西","body":"<h1>GNU Gengetopt 2.10 Usage<\/h1>\r\n需要由gengetopt生成的函数处理的命令行选项在一个文件中指定（该文件的扩展名通常为  <em>.ggo<\/em> ）。文件组织为文本行，格式为：\r\n<pre>package &lt;packname&gt;<br />version &lt;version&gt;<br /><br />option &lt;long&gt; &lt;short&gt; &lt;desc&gt; &lt;argtype&gt; {default=&quot;&lt;default value&gt;&quot;} &lt;required&gt; {multiple}<br />option &lt;long&gt; &lt;short&gt; &lt;desc&gt; flag&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;onoff&gt;<br />option &lt;long&gt; &lt;short&gt; &lt;desc&gt; no<\/pre>\r\n其中：\r\n<p><strong>package<\/strong><\/p>\r\n<blockquote>双引号字符串。优先于autoconf生成的PACKAGE。<\/blockquote><strong>version<\/strong>  <blockquote>双引号字符串。优先于autoconf生成的VERSION。<\/blockquote><strong>purpose<\/strong>  <blockquote>双引号字符串。程序的功能（可多行），将会出现在输出的帮助中。<\/blockquote><strong>long<\/strong>  <blockquote>长选项，双引号字符串。可由大小写字母、数字、'-'和'.'组成，中间不能有空格。依据选项名生成的变量名保存该选项的参数。名字生成规则为：'.'和'-'被替换为'_'，并在最后附加'_arg'或'_flag'。<\/blockquote><strong>short<\/strong>   <blockquote>短选项，一个字符，可以为大小写字母或数字。如果该字符为'-'，就表示没有同此行定义的长选项对应的短选项。（也就是说长选项可以没有对应的短选项。）<\/blockquote><strong>desc<\/strong>   <blockquote>双引号字符串。 可由大小写字母、数字、'-'和'.'组成，第一个字符不能是空格。<\/blockquote><strong>argtype<\/strong>  <blockquote>string、int、short、long、float、double、longdouble或longlong。<\/blockquote><strong>default<\/strong>   <blockquote>该选项可选的默认值。该值必须用双引号括起来。<\/blockquote><strong>required<\/strong>  <blockquote>yes或no。<br /><\/blockquote><strong>multiple<\/strong>  <blockquote>如果标记为multiple，就表示此选项可以出现多次，所有的值被组织在一个数组中。参见&ldquo;高级特征&rdquo;一节。<\/blockquote><strong>onoff<\/strong>   <blockquote>on或off。为程序启动时该flag的状态。如果用户的命令行上给出此选项，则对应的flag反转。<\/blockquote>选项的第三种类型用于不需要任何参数的选项。它决不能是required。\r\n<p>文件中可以使用注释，注释的范围从'<strong>#<\/strong>'开始直到行尾。<\/p>\r\n<p>下面是ggo文件的一个例子（该文件叫做<em>sample1.ggo<\/em>）<br />&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"10\" bgcolor=\"#e0e0e0\" nosave=\"\">\r\n    <tbody>\r\n        <tr nosave=\"\">\r\n            <td nosave=\"\"><tt># file sample1.ggo<\/tt> <br /><tt>option&nbsp; &quot;str-opt&quot;&nbsp;&nbsp;&nbsp;&nbsp; s &quot;A  string option&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string&nbsp;&nbsp;&nbsp;&nbsp; no<\/tt> <br /><tt>option&nbsp; &quot;my-opt&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m &quot;Another  integer option&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp;&nbsp;&nbsp; no<\/tt> <br /><tt>option&nbsp; &quot;int-opt&quot;&nbsp;&nbsp;&nbsp;&nbsp; i &quot;A int  option&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; yes<\/tt> <br /><tt>option&nbsp; &quot;flag-opt&quot;&nbsp;&nbsp;&nbsp; - &quot;A flag  option&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; flag&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; off<\/tt> <br /><tt>option&nbsp; &quot;funct-opt&quot;&nbsp;&nbsp; F &quot;A function  option&quot;&nbsp;&nbsp;&nbsp; no&nbsp;<\/tt> <br /><tt>option&nbsp; &quot;long-opt&quot;&nbsp;&nbsp;&nbsp; - &quot;A long option&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; no<\/tt> <br /><tt>option&nbsp; &quot;def-opt&quot;&nbsp;&nbsp;&nbsp;&nbsp; - &quot;A string option with  default&quot; string default=&quot;Hello&quot; no<\/tt><\/td>\r\n        <\/tr>\r\n    <\/tbody>\r\n<\/table>\r\n<\/p>\r\n<p>gengetopt最简单的用法是将输入文件作为标准输入：<\/p>\r\n<pre>gengetopt &lt; sample1.ggo<\/pre>\r\n在默认情况下gengetopt生成<strong><em>cmdline.h<\/em><\/strong>和<strong><em>cmdline.c<\/em><\/strong>。如果你不喜欢，也可以通过命令行选项指定输出的文件名：\r\n<pre>gengetopt &lt; sample1.ggo --file-name=cmdline1 --unamed-opts<\/pre>\r\n选项<em>--unamed-opts<\/em>使生成的命令行选项解析器接受非选项的名字（例如，你可以直接传递一个文件名而无需将其作为一个选项的参数，还可以使用通配符，如*.c、foo*.?等等）。\r\n<p>在cmdline1.h中你可以发现一个自动生成的C结构gengetopt_args_info：<br />&nbsp;\r\n<table width=\"100%\" cols=\"1\" border=\"1\" nosave=\"\">\r\n    <tbody>\r\n        <tr nosave=\"\">\r\n            <td nosave=\"\">\r\n            <pre><tt><br /><em><font color=\"#9a1900\">/* cmdline1.h */<\/font><\/em><br /><br /><em><font color=\"#9a1900\">/* File autogenerated by gengetopt version 2.9.1  */<\/font><\/em><br /><br /><strong><font color=\"#000080\">#ifndef<\/font><\/strong> CMDLINE1_H<br /><strong><font color=\"#000080\">#define<\/font><\/strong> CMDLINE1_H<br /><br /><em><font color=\"#9a1900\">/* If we use autoconf.  */<\/font><\/em><br /><strong><font color=\"#000080\">#ifdef<\/font><\/strong> HAVE_CONFIG_H<br /><strong><font color=\"#000080\">#include<\/font><\/strong> <font color=\"#ff0000\">&quot;config.h&quot;<\/font><br /><strong><font color=\"#000080\">#endif<\/font><\/strong><br /><br /><strong><font color=\"#000080\">#ifdef<\/font><\/strong> __cplusplus<br /><strong><font color=\"#0000ff\">extern<\/font><\/strong> <font color=\"#ff0000\">&quot;C&quot;<\/font> <font color=\"#ff0000\">{<\/font><br /><strong><font color=\"#000080\">#endif<\/font><\/strong> <em><font color=\"#9a1900\">/* __cplusplus */<\/font><\/em><br /><br /><strong><font color=\"#000080\">#ifndef<\/font><\/strong> CMDLINE_PARSER_PACKAGE<br /><strong><font color=\"#000080\">#define<\/font><\/strong> CMDLINE_PARSER_PACKAGE <font color=\"#ff0000\">&quot;sample1&quot;<\/font><br /><strong><font color=\"#000080\">#endif<\/font><\/strong><br /><br /><strong><font color=\"#000080\">#ifndef<\/font><\/strong> CMDLINE_PARSER_VERSION<br /><strong><font color=\"#000080\">#define<\/font><\/strong> CMDLINE_PARSER_VERSION <font color=\"#ff0000\">&quot;2.0&quot;<\/font><br /><strong><font color=\"#000080\">#endif<\/font><\/strong><br /><br /><strong><font color=\"#0000ff\">struct<\/font><\/strong> gengetopt_args_info<br /><font color=\"#ff0000\">{<\/font><br />  <font color=\"#009900\">char<\/font> <font color=\"#990000\">*<\/font> str_opt_arg<font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* A string option.  */<\/font><\/em><br />  <font color=\"#009900\">int<\/font> my_opt_arg<font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* Another integer option.  */<\/font><\/em><br />  <font color=\"#009900\">int<\/font> int_opt_arg<font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* A int option.  */<\/font><\/em><br />  <font color=\"#009900\">int<\/font> flag_opt_flag<font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* A flag option (default=off).  */<\/font><\/em><br />  <font color=\"#009900\">long<\/font> long_opt_arg<font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* A long option.  */<\/font><\/em><br />  <font color=\"#009900\">char<\/font> <font color=\"#990000\">*<\/font> def_opt_arg<font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* A string option with default (default='Hello').  */<\/font><\/em><br /><br />  <font color=\"#009900\">int<\/font> help_given <font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* Whether help was given.  */<\/font><\/em><br />  <font color=\"#009900\">int<\/font> version_given <font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* Whether version was given.  */<\/font><\/em><br />  <font color=\"#009900\">int<\/font> str_opt_given <font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* Whether str-opt was given.  */<\/font><\/em><br />  <font color=\"#009900\">int<\/font> my_opt_given <font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* Whether my-opt was given.  */<\/font><\/em><br />  <font color=\"#009900\">int<\/font> int_opt_given <font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* Whether int-opt was given.  */<\/font><\/em><br />  <font color=\"#009900\">int<\/font> flag_opt_given <font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* Whether flag-opt was given.  */<\/font><\/em><br />  <font color=\"#009900\">int<\/font> funct_opt_given <font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* Whether funct-opt was given.  */<\/font><\/em><br />  <font color=\"#009900\">int<\/font> long_opt_given <font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* Whether long-opt was given.  */<\/font><\/em><br />  <font color=\"#009900\">int<\/font> def_opt_given <font color=\"#990000\">;<\/font>\t<em><font color=\"#9a1900\">/* Whether def-opt was given.  */<\/font><\/em><br /><br />  <font color=\"#009900\">char<\/font> <font color=\"#990000\">*<\/font><font color=\"#990000\">*<\/font>inputs <font color=\"#990000\">;<\/font> <em><font color=\"#9a1900\">/* unamed options */<\/font><\/em><br />  <font color=\"#009900\">unsigned<\/font> inputs_num <font color=\"#990000\">;<\/font> <em><font color=\"#9a1900\">/* unamed options number */<\/font><\/em><br /><font color=\"#ff0000\">}<\/font> <font color=\"#990000\">;<\/font><br /><br /><font color=\"#009900\">int<\/font> <strong><font color=\"#000000\">cmdline_parser<\/font><\/strong> <font color=\"#990000\">(<\/font><font color=\"#009900\">int<\/font> argc<font color=\"#990000\">,<\/font> <font color=\"#009900\">char<\/font> <font color=\"#990000\">*<\/font> <strong><font color=\"#0000ff\">const<\/font><\/strong> <font color=\"#990000\">*<\/font>argv<font color=\"#990000\">,<\/font> <strong><font color=\"#0000ff\">struct<\/font><\/strong> gengetopt_args_info <font color=\"#990000\">*<\/font>args_info<font color=\"#990000\">)<\/font><font color=\"#990000\">;<\/font><br /><br /><font color=\"#009900\">void<\/font> <strong><font color=\"#000000\">cmdline_parser_print_help<\/font><\/strong><font color=\"#990000\">(<\/font><font color=\"#009900\">void<\/font><font color=\"#990000\">)<\/font><font color=\"#990000\">;<\/font><br /><font color=\"#009900\">void<\/font> <strong><font color=\"#000000\">cmdline_parser_print_version<\/font><\/strong><font color=\"#990000\">(<\/font><font color=\"#009900\">void<\/font><font color=\"#990000\">)<\/font><font color=\"#990000\">;<\/font><br /><br /><strong><font color=\"#000080\">#ifdef<\/font><\/strong> __cplusplus<br /><font color=\"#ff0000\">}<\/font><br /><strong><font color=\"#000080\">#endif<\/font><\/strong> <em><font color=\"#9a1900\">/* __cplusplus */<\/font><\/em><br /><strong><font color=\"#000080\">#endif<\/font><\/strong> <em><font color=\"#9a1900\">/* CMDLINE1_H */<\/font><\/em><\/tt><\/pre>\r\n            <\/td>\r\n        <\/tr>\r\n    <\/tbody>\r\n<\/table>\r\n<\/p>\r\n<p>注意，默认情况下生成的函数叫做<em>cmdline_parser<\/em>（下面给出的命令行选项可以将其命名为其他的名字），参数为<em>main<\/em>接收的参数和一个指向一个结构体的指针，运行的结果会保存在该结构体中。<br />在主程序中就可以使用该函数了：<br />&nbsp;\r\n<table width=\"100%\" cols=\"1\" border=\"1\" nosave=\"\">\r\n    <tbody>\r\n        <tr nosave=\"\">\r\n            <td nosave=\"\">\r\n            <pre><tt><em><font color=\"#9a1900\">/* main1.cc */<br />/* we try to use gengetopt generated file in a C++ program */<br />/* we don't use autoconf and automake vars */<br /><br /><\/font><\/em><strong><font color=\"#000080\">#include<\/font><\/strong> <font color=\"#ff0000\">&lt;iostream.h&gt;<br /><\/font><strong><font color=\"#000080\">#include<\/font><\/strong> <font color=\"#ff0000\">&quot;stdlib.h&quot;<br /><br /><\/font><strong><font color=\"#000080\">#include<\/font><\/strong> <font color=\"#ff0000\">&quot;cmdline1.h&quot;<br /><br /><\/font><font color=\"#009900\">int<br /><\/font><strong><font color=\"#000000\">main<\/font><\/strong> <font color=\"#990000\">(<\/font><font color=\"#009900\">int<\/font> argc<font color=\"#990000\">,<\/font> <font color=\"#009900\">char<\/font> <font color=\"#990000\">**<\/font>argv<font color=\"#990000\">)<br /><\/font><font color=\"#ff0000\">{<br /><\/font>&nbsp; gengetopt_args_info args_info<font color=\"#990000\">;<br /><br /><\/font>&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;This one is from a C++ program&quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> endl <font color=\"#990000\">;<br /><\/font>&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;Try to launch me with some options&quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> endl <font color=\"#990000\">;<br /><\/font>&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;(type sample1 --help for the complete list)&quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> endl <font color=\"#990000\">;<br /><\/font>&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;For example: ./sample1 *.* --funct-opt&quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> endl <font color=\"#990000\">;<br /><br /><\/font>&nbsp; <em><font color=\"#9a1900\">/* let's call our cmdline parser */<br /><\/font><\/em>&nbsp; <strong><font color=\"#0000ff\">if<\/font><\/strong> <font color=\"#990000\">(<\/font><strong><font color=\"#000000\">cmdline_parser<\/font><\/strong> <font color=\"#990000\">(<\/font>argc<font color=\"#990000\">,<\/font> argv<font color=\"#990000\">,<\/font> <font color=\"#990000\">&amp;<\/font>args_info<font color=\"#990000\">)<\/font> <font color=\"#990000\">!=<\/font> <font color=\"#993399\">0<\/font><font color=\"#990000\">)<br /><\/font>&nbsp;&nbsp;&nbsp; <strong><font color=\"#000000\">exit<\/font><\/strong><font color=\"#990000\">(<\/font><font color=\"#993399\">1<\/font><font color=\"#990000\">)<\/font> <font color=\"#990000\">;<br /><br /><\/font>&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;Here are the options you passed...&quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> endl<font color=\"#990000\">;<br /><br /><\/font>&nbsp; <strong><font color=\"#0000ff\">for<\/font><\/strong> <font color=\"#990000\">(<\/font> <font color=\"#009900\">unsigned<\/font> i <font color=\"#990000\">=<\/font> <font color=\"#993399\">0<\/font> <font color=\"#990000\">;<\/font> i <font color=\"#990000\">&lt;<\/font> args_info<font color=\"#990000\">.<\/font>inputs_num <font color=\"#990000\">;<\/font> <font color=\"#990000\">++<\/font>i <font color=\"#990000\">)<br /><\/font>&nbsp;&nbsp;&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;file: &quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> args_info<font color=\"#990000\">.<\/font>inputs<font color=\"#990000\">[<\/font>i<font color=\"#990000\">]<\/font> <font color=\"#990000\">&lt;&lt;<\/font> endl <font color=\"#990000\">;<br /><br /><\/font>&nbsp; <strong><font color=\"#0000ff\">if<\/font><\/strong> <font color=\"#990000\">(<\/font> args_info<font color=\"#990000\">.<\/font>funct_opt_given <font color=\"#990000\">)<br /><\/font>&nbsp;&nbsp;&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;You chose --funct-opt or -F.&quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> endl <font color=\"#990000\">;<br /><br /><\/font>&nbsp; <strong><font color=\"#0000ff\">if<\/font><\/strong> <font color=\"#990000\">(<\/font> args_info<font color=\"#990000\">.<\/font>str_opt_given <font color=\"#990000\">)<br /><\/font>&nbsp;&nbsp;&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;You inserted &quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> args_info<font color=\"#990000\">.<\/font>str_opt_arg <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot; for &quot;<\/font> <font color=\"#990000\">&lt;&lt;<br /><\/font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color=\"#ff0000\">&quot;--str-opt option.&quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> endl <font color=\"#990000\">;<br /><br /><\/font>&nbsp; <strong><font color=\"#0000ff\">if<\/font><\/strong> <font color=\"#990000\">(<\/font> args_info<font color=\"#990000\">.<\/font>int_opt_given <font color=\"#990000\">)<br /><\/font>&nbsp;&nbsp;&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;This is the integer you input: &quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font>&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; args_info<font color=\"#990000\">.<\/font>int_opt_arg <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;.&quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> endl<font color=\"#990000\">;<br /><br /><\/font>&nbsp; <strong><font color=\"#0000ff\">if<\/font><\/strong> <font color=\"#990000\">(<\/font>args_info<font color=\"#990000\">.<\/font>flag_opt_given<font color=\"#990000\">)<br /><\/font>&nbsp;&nbsp;&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;The flag option was given!&quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> endl<font color=\"#990000\">;<br /><br /><\/font>&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;The flag is &quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#990000\">(<\/font> args_info<font color=\"#990000\">.<\/font>flag_opt_flag <font color=\"#990000\">?<\/font> <font color=\"#ff0000\">&quot;on&quot;<\/font> <font color=\"#990000\">:<\/font> <font color=\"#ff0000\">&quot;off&quot;<\/font> <font color=\"#990000\">)<\/font> <font color=\"#990000\">&lt;&lt;<br /><\/font>&nbsp;&nbsp;&nbsp; <font color=\"#ff0000\">&quot;.&quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> endl <font color=\"#990000\">;<br /><br /><\/font>&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> args_info<font color=\"#990000\">.<\/font>def_opt_arg <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;! &quot;<\/font><font color=\"#990000\">;<br /><br /><\/font>&nbsp; cout <font color=\"#990000\">&lt;&lt;<\/font> <font color=\"#ff0000\">&quot;Have a nice day! :-)&quot;<\/font> <font color=\"#990000\">&lt;&lt;<\/font> endl <font color=\"#990000\">;<br /><br /><\/font>&nbsp; <strong><font color=\"#0000ff\">return<\/font><\/strong> <font color=\"#993399\">0<\/font><font color=\"#990000\">;<br /><\/font><font color=\"#ff0000\">}<\/font><\/tt><\/pre>\r\n            <\/td>\r\n        <\/tr>\r\n    <\/tbody>\r\n<\/table>\r\n<\/p>\r\n<p>现在你可以编译<em>main1.cc<\/em>和由gengetopt生成的<em>cmdline1.c<\/em>，然后将它们连接成<em>sample1<\/em>可执行程序：<\/p>\r\n<pre>gcc -c cmdline1.c<br />g++ -c main1.cc<br />g++ -o sample1 cmdline1.o main1.o<\/pre>\r\n（这里我们假设getopt_long被包含在标准C库中）。\r\n<p>现在我们来测试生成的程序： <\/p>\r\n<pre>$ ./sample1 -s &quot;hello&quot; --int-opt 1234<br />This one is from a C++ program<br />Try to launch me with some options<br />(type sample1 --help for the complete list)<br />For example: ./sample1 *.* --funct-opt<br />Here are the options you passed...<br />You inserted hello for --str-opt option.<br />This is the integer you input: 1234.<br />The flag is off.<br />Have a nice day! :-)<\/pre>\r\n你也可以在命令行中指定很多文件名（也演示了flag的用法）：\r\n<pre>$ ./sample1 *.h -i -100 -x<br />This one is from a C++ program<br />Try to launch me with some options<br />(type sample1 --help for the complete list)<br />For example: ./sample1 *.* --funct-opt<br />Here are the options you passed...<br />file: cmdline1.h<br />file: cmdline2.h<br />file: cmdline.h<br />file: getopt.h<br />This is the integer you input: -100.<br />The flag is on.<br />Have a nice day! :-)<\/pre>\r\n如果我们试图省略<em>--int-opt<\/em>（或<em>-i<\/em>）这个标记为required的选项，我们就会得到一个错误：\r\n<pre>$ ./sample1<br />This one is from a C++ program<br />Try to launch me with some options<br />(type sample1 --help for the complete list)<br />For example: ./sample1 *.* --funct-opt<br />sample1: `--int-opt' (`-i') option required!<\/pre>\r\n如果你好奇，可以看看生成的C文件。\r\n<h2>高级特征<\/h2>\r\n<h3>选项分组<br /><\/h3>\r\n可以给选项分组；属于同一组的选项是互斥的。如果要使用这个特征，首先需要定义组，然后使用<em>groupoption<\/em>定义组选项。组选项同标准选项的语法基本相同，区别是不能使用required标志（因为同一组内的选项是互斥的，所以使用这个标志就不合道理了），另外需要指定该选项所属的<em>group<\/em>。\r\n<pre>defgroup &quot;&lt;group name&gt;&quot; {yes}<br />groupoption &lt;long&gt; &lt;short&gt; &lt;desc&gt; &lt;argtype&gt; group=&quot;&lt;group name&gt;&quot;<\/pre>\r\n如果组被定义为required（其实使用yes标志标识的），则必须在命令行上出现一个（且只有一个）属于该组的选项。<br /><br />这儿有一个例子（取自于<tt>test_group_cmd.ggo<\/tt>）：<br />\r\n<pre>defgroup &quot;my grp2&quot;<br />defgroup &quot;grp1&quot; yes<br />groupoption &quot;opta&quot; a &quot;string a&quot; group=&quot;grp1&quot;<br />groupoption &quot;optb&quot; b &quot;string b&quot; group=&quot;grp1&quot;<br />groupoption &quot;optc&quot; - &quot;string c&quot; group=&quot;my grp2&quot;<br />groupoption &quot;optd&quot; d &quot;string d&quot; group=&quot;my grp2&quot;<br /><\/pre>\r\n组<em>grp1<\/em>被标记为required，所以必须指定<em>opta<\/em>、<em>optb<\/em>二者之一（且不能全选）。输出为：\r\n<pre>$ ./test_groups<br />gengetopt: 0 options of group grp1 were given. One is required<br />$ ./test_groups -a          OK<br />$ ./test_groups -a -b<br />gengetopt: 2 options of group grp1 were given. One is required<br />$ ./test_groups -a -c       OK<br />$ ./test_groups -a --optc -d<br />gengetopt: 2 options of group my grp2 were given. At most one is required<br /><\/pre>\r\n<h3>配置文件<\/h3>\r\n通常，将命令行选项放到配置文件里是一个很有用的特性。这样，如果某些选项没有在命令行上出现，就可以从文件中获得它们的值。如果调用gengetopt时指定了<em>--conf-parser<\/em>选项，那么除了标准的命令行解析器之外，还会生成另一个解析器（名为<em>&lt;commandline_parser&gt;_configfile<\/em>）：\r\n<pre>int<br />&lt;cmd_parser_name&gt;_configfile (char * const filename,<br />                              struct gengetopt_args_info *args_info,<br />                              int override);<\/pre>\r\n配置文件中以<em>#<\/em>开始的行是注释，此外的语法如下：<br />\r\n<ul>\r\n    <li>&lt;option_name&gt; {&lt;option_val&gt;}  意思是如果给出<em>option_name<\/em>，并且该选项接受参数，那么其值为<em>option_val<\/em>  <\/li>\r\n<\/ul>\r\n下面给出了一个使用此特征的例子（<tt>test_conf_parser<\/tt>）：<br /><br />\r\n<table width=\"100%\" cols=\"1\" border=\"1\" nosave=\"\">\r\n    <tbody>\r\n        <tr nosave=\"\">\r\n            <td nosave=\"\">\r\n            <pre><tt><br /><em><font color=\"#9a1900\">/* test_conf_parser.c test */<\/font><\/em><br /><br /><em><font color=\"#9a1900\">/* test all kinds of options and the conf file parser */<\/font><\/em><br /><br /><strong><font color=\"#000080\">#include<\/font><\/strong> <font color=\"#ff0000\">&lt;stdlib.h&gt;<\/font><br /><strong><font color=\"#000080\">#include<\/font><\/strong> <font color=\"#ff0000\">&lt;stdio.h&gt;<\/font><br /><br /><strong><font color=\"#000080\">#include<\/font><\/strong> <font color=\"#ff0000\">&quot;test_conf_parser_cmd.h&quot;<\/font><br /><br /><strong><font color=\"#0000ff\">static<\/font><\/strong> <strong><font color=\"#0000ff\">struct<\/font><\/strong> gengetopt_args_info args_info<font color=\"#990000\">;<\/font><br /><br /><font color=\"#009900\">int<\/font><br /><strong><font color=\"#000000\">main<\/font><\/strong> <font color=\"#990000\">(<\/font><font color=\"#009900\">int<\/font> argc<font color=\"#990000\">,<\/font> <font color=\"#009900\">char<\/font> <font color=\"#990000\">*<\/font><font color=\"#990000\">*<\/font>argv<font color=\"#990000\">)<\/font><br /><font color=\"#ff0000\">{<\/font>  <br />  <strong><font color=\"#0000ff\">if<\/font><\/strong> <font color=\"#990000\">(<\/font><strong><font color=\"#000000\">test_conf_parser_cmd_parser<\/font><\/strong> <font color=\"#990000\">(<\/font>argc<font color=\"#990000\">,<\/font> argv<font color=\"#990000\">,<\/font> <font color=\"#990000\">&amp;<\/font>args_info<font color=\"#990000\">)<\/font> <font color=\"#990000\">!<\/font><font color=\"#990000\">=<\/font> <font color=\"#993399\">0<\/font><font color=\"#990000\">)<\/font><br />    <strong><font color=\"#000000\">exit<\/font><\/strong><font color=\"#990000\">(<\/font><font color=\"#993399\">1<\/font><font color=\"#990000\">)<\/font> <font color=\"#990000\">;<\/font><br /><br />  <strong><font color=\"#0000ff\">if<\/font><\/strong> <font color=\"#990000\">(<\/font><strong><font color=\"#000000\">test_conf_parser_cmd_parser_configfile<\/font><\/strong><br />      <font color=\"#990000\">(<\/font>args_info<font color=\"#990000\">.<\/font>conf_file_arg<font color=\"#990000\">,<\/font> <font color=\"#990000\">&amp;<\/font>args_info<font color=\"#990000\">,<\/font> <font color=\"#993399\">1<\/font><font color=\"#990000\">)<\/font> <font color=\"#990000\">!<\/font><font color=\"#990000\">=<\/font> <font color=\"#993399\">0<\/font><font color=\"#990000\">)<\/font> <em><font color=\"#9a1900\">// override cmd options<\/font><\/em><br />    <strong><font color=\"#000000\">exit<\/font><\/strong><font color=\"#990000\">(<\/font><font color=\"#993399\">1<\/font><font color=\"#990000\">)<\/font><font color=\"#990000\">;<\/font><br /><br />  <strong><font color=\"#000000\">printf<\/font><\/strong> <font color=\"#990000\">(<\/font><font color=\"#ff0000\">&quot;value of required: %s/n&quot;<\/font><font color=\"#990000\">,<\/font> args_info<font color=\"#990000\">.<\/font>required_arg<font color=\"#990000\">)<\/font><font color=\"#990000\">;<\/font><br />  <strong><font color=\"#000000\">printf<\/font><\/strong> <font color=\"#990000\">(<\/font><font color=\"#ff0000\">&quot;value of string: %s/n&quot;<\/font><font color=\"#990000\">,<\/font> args_info<font color=\"#990000\">.<\/font>string_arg<font color=\"#990000\">)<\/font><font color=\"#990000\">;<\/font><br />  <strong><font color=\"#000000\">printf<\/font><\/strong> <font color=\"#990000\">(<\/font><font color=\"#ff0000\">&quot;value of no-short: %d/n&quot;<\/font><font color=\"#990000\">,<\/font> args_info<font color=\"#990000\">.<\/font>no_short_given<font color=\"#990000\">)<\/font><font color=\"#990000\">;<\/font><br />  <strong><font color=\"#000000\">printf<\/font><\/strong> <font color=\"#990000\">(<\/font><font color=\"#ff0000\">&quot;value of int: %d/n&quot;<\/font><font color=\"#990000\">,<\/font> args_info<font color=\"#990000\">.<\/font>int_arg<font color=\"#990000\">)<\/font><font color=\"#990000\">;<\/font><br />  <strong><font color=\"#000000\">printf<\/font><\/strong> <font color=\"#990000\">(<\/font><font color=\"#ff0000\">&quot;value of float: %f/n&quot;<\/font><font color=\"#990000\">,<\/font> args_info<font color=\"#990000\">.<\/font>float_arg<font color=\"#990000\">)<\/font><font color=\"#990000\">;<\/font><br /><br />  <strong><font color=\"#0000ff\">return<\/font><\/strong> <font color=\"#993399\">0<\/font><font color=\"#990000\">;<\/font><br /><font color=\"#ff0000\">}<\/font><\/tt><\/pre>\r\n            <\/td>\r\n        <\/tr>\r\n    <\/tbody>\r\n<\/table>\r\n<br />如果我们使用配置文件（<em>test_conf.conf<\/em>）<br />\r\n<pre># required option<br />required &quot;this is a test&quot;<br />float 3.14<br />no-short<br />string another<br /><\/pre>\r\n并这样运行<em>test_conf_parser<\/em>，结果为：<br />\r\n<pre>./test_conf_parser -r bar -i 100 --conf-file test_conf.conf <br />value of required: this is a test<br />value of string: another<br />value of no-short: 1<br />value of int: 100<br />value of float: 3.140000<br /><\/pre>\r\n<h3>multiple选项<\/h3>\r\n如果一个选项被标记为<tt>multiple<\/tt>，则可以在命令行上多次指定此选项。在这种情况下，假定该选项叫做foo，生成<tt>foo_given<\/tt>字段就保存该选项出现的次数，而相应的<tt>foo_arg<\/tt>字段为包含该选项值的数组。<br /><br />例如，如果gengetopt文件如下：<br /><br />\r\n<table cellspacing=\"0\" cellpadding=\"10\" bgcolor=\"#e0e0e0\" nosave=\"\">\r\n    <tbody>\r\n        <tr nosave=\"\">\r\n            <td nosave=\"\">\r\n            <pre># test options that can be given more than once<\/pre>\r\n            <pre><br />option &quot;string&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s &quot;string option&quot; string no multiple<\/pre>\r\n            <pre>option &quot;int&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i &quot;int option&quot; int no multiple<\/pre>\r\n            <\/td>\r\n        <\/tr>\r\n    <\/tbody>\r\n<\/table>\r\n<br />就会采用如下方式接收命令行选项：<br /><br />\r\n<table width=\"100%\" cols=\"1\" border=\"1\" nosave=\"\">\r\n    <tbody>\r\n        <tr nosave=\"\">\r\n            <td nosave=\"\">\r\n            <pre><tt><br /><em><font color=\"#9a1900\">/* test_multiple.c test */<\/font><\/em><br /><br /><em><font color=\"#9a1900\">/* test options that can be given more than once */<\/font><\/em><br /><br /><strong><font color=\"#000080\">#include<\/font><\/strong> <font color=\"#ff0000\">&lt;stdlib.h&gt;<\/font><br /><strong><font color=\"#000080\">#include<\/font><\/strong> <font color=\"#ff0000\">&lt;stdio.h&gt;<\/font><br /><br /><strong><font color=\"#000080\">#include<\/font><\/strong> <font color=\"#ff0000\">&quot;test_multiple_cmd.h&quot;<\/font><br /><br /><strong><font color=\"#0000ff\">static<\/font><\/strong> <strong><font color=\"#0000ff\">struct<\/font><\/strong> gengetopt_args_info args_info<font color=\"#990000\">;<\/font><br /><br /><font color=\"#009900\">int<\/font><br /><strong><font color=\"#000000\">main<\/font><\/strong> <font color=\"#990000\">(<\/font><font color=\"#009900\">int<\/font> argc<font color=\"#990000\">,<\/font> <font color=\"#009900\">char<\/font> <font color=\"#990000\">*<\/font><font color=\"#990000\">*<\/font>argv<font color=\"#990000\">)<\/font><br /><font color=\"#ff0000\">{<\/font> <br />  <font color=\"#009900\">int<\/font> i <font color=\"#990000\">=<\/font> <font color=\"#993399\">0<\/font><font color=\"#990000\">;<\/font><br /> <br />  <strong><font color=\"#0000ff\">if<\/font><\/strong> <font color=\"#990000\">(<\/font><strong><font color=\"#000000\">test_multiple_cmd_parser<\/font><\/strong> <font color=\"#990000\">(<\/font>argc<font color=\"#990000\">,<\/font> argv<font color=\"#990000\">,<\/font> <font color=\"#990000\">&amp;<\/font>args_info<font color=\"#990000\">)<\/font> <font color=\"#990000\">!<\/font><font color=\"#990000\">=<\/font> <font color=\"#993399\">0<\/font><font color=\"#990000\">)<\/font><br />    <strong><font color=\"#000000\">exit<\/font><\/strong><font color=\"#990000\">(<\/font><font color=\"#993399\">1<\/font><font color=\"#990000\">)<\/font> <font color=\"#990000\">;<\/font><br /><br />  <strong><font color=\"#0000ff\">for<\/font><\/strong> <font color=\"#990000\">(<\/font>i <font color=\"#990000\">=<\/font> <font color=\"#993399\">0<\/font><font color=\"#990000\">;<\/font> i <font color=\"#990000\">&lt;<\/font> args_info<font color=\"#990000\">.<\/font>string_given<font color=\"#990000\">;<\/font> <font color=\"#990000\">+<\/font><font color=\"#990000\">+<\/font>i<font color=\"#990000\">)<\/font><br />    <strong><font color=\"#000000\">printf<\/font><\/strong> <font color=\"#990000\">(<\/font><font color=\"#ff0000\">&quot;passed string: %s/n&quot;<\/font><font color=\"#990000\">,<\/font> args_info<font color=\"#990000\">.<\/font>string_arg<font color=\"#990000\">[<\/font>i<font color=\"#990000\">]<\/font><font color=\"#990000\">)<\/font><font color=\"#990000\">;<\/font><br /><br />  <strong><font color=\"#0000ff\">for<\/font><\/strong> <font color=\"#990000\">(<\/font>i <font color=\"#990000\">=<\/font> <font color=\"#993399\">0<\/font><font color=\"#990000\">;<\/font> i <font color=\"#990000\">&lt;<\/font> args_info<font color=\"#990000\">.<\/font>int_given<font color=\"#990000\">;<\/font> <font color=\"#990000\">+<\/font><font color=\"#990000\">+<\/font>i<font color=\"#990000\">)<\/font><br />    <strong><font color=\"#000000\">printf<\/font><\/strong> <font color=\"#990000\">(<\/font><font color=\"#ff0000\">&quot;passed int: %d/n&quot;<\/font><font color=\"#990000\">,<\/font> args_info<font color=\"#990000\">.<\/font>int_arg<font color=\"#990000\">[<\/font>i<font color=\"#990000\">]<\/font><font color=\"#990000\">)<\/font><font color=\"#990000\">;<\/font><br /><br />  <strong><font color=\"#0000ff\">return<\/font><\/strong> <font color=\"#993399\">0<\/font><font color=\"#990000\">;<\/font><br /><font color=\"#ff0000\">}<\/font><\/tt><\/pre>\r\n            <\/td>\r\n        <\/tr>\r\n    <\/tbody>\r\n<\/table>\r\n<br />如果采用如下方式调用程序：<br />\r\n<pre>./test_multiple -s &quot;foo&quot; -s &quot;bar&quot; -s &quot;hello&quot; -i 100 -i 200 -s &quot;world&quot;<br /><\/pre>\r\n输出为：\r\n<pre>passed string: world<br />passed string: hello<br />passed string: bar<br />passed string: foo<br />passed int: 200<br />passed int: 100<br /><\/pre>\r\n<h2>给Windows用户的提醒<\/h2>\r\n如果你运行Windows，请记住DOS  shell不会翻译通配符，因此前面使用'<tt>*.h<\/tt>'的例子无法正常运行。\r\n<h2>选项<\/h2>\r\n下面是<em>gengetopt --help<\/em>的输出：\r\n<pre>$ gengetopt --help<br />gengetopt 2.10<br /><br />Purpose:<br />&nbsp; This program generates a C function that uses getopt_long function<br />&nbsp; to parse the command line options, validate them and fill a struct.<br /><br />Usage: gengetopt [OPTIONS]...<br />&nbsp;&nbsp; -h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Print help and exit<br />&nbsp;&nbsp; -V&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Print version and exit<br />&nbsp;&nbsp; -iSTRING&nbsp;&nbsp; --input=STRING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input file (default std input)<br />&nbsp;&nbsp; -fSTRING&nbsp;&nbsp; --func-name=STRING&nbsp; name of generated function (default='cmdline_parser')<br />&nbsp;&nbsp; -FSTRING&nbsp;&nbsp; --file-name=STRING&nbsp; name of generated file (default='cmdline')<br />&nbsp;&nbsp; -l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --long-help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; long usage line in help<br />&nbsp;&nbsp; -u&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --unamed-opts&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; accept filenames<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --no-handle-help&nbsp;&nbsp;&nbsp; do not handle --help|-h automatically<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --no-handle-version do not handle --version|-V automatically<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --no-handle-error&nbsp;&nbsp; do not exit on errors <br />              --conf-parser         generate a config file parser<br /><br />Maintained by Lorenzo Bettini &lt;bettini@gnu.org&gt;<br />Report bugs to &lt;bug-gengetopt@gnu.org&gt;<\/pre>\r\n选项的含义应该说的很清楚了，详细解释一下：\r\n<ul>\r\n    <li>如果不指定--<em>func-name<\/em>，则使用<em>cmdline_parser<\/em>作为默认值。  <\/li>\r\n    <li>如果指定<em>--long-help<\/em>选项，&quot;Usage&quot;之后会显示所有的选项；如果有很多选项就会比较烦人。  <\/li>\r\n    <li>如果指定<em>--unamed-opts<\/em>选项，我们就能接受不属于option的参数，在大多数情况下，这意味着我们可以将文件名传递给程序（参见前面<em>sample1  *.h<\/em>这个例子）。  <\/li>\r\n    <li>如果指定<em>--no-handle-help<\/em>（<em>--no-handle-version<\/em>），就不会自动处理命令行选项<em>--help<\/em>|<em>-h<\/em>（<em>--version<\/em>|<em>-V<\/em>），这样程序员就可以输出其它的信息，而且还可以在随后调用标准的帮助（版本）输出函数，该函数名为<em>&lt;parser-name&gt;_print_help<\/em>（<em>&lt;parser-name&gt;_print_version<\/em>），其中<em>&lt;parser-name&gt;<\/em>是通过<em>--func-name<\/em>指定的名字或默认的<em>cmdline_parser<\/em>。   <\/li>\r\n    <li>如果指定<em>--no-handle-error<\/em>，解析过程中的错误并不会造成程序退出；由于发生错误时解析器函数会返回非0值，程序可以自己打印帮助信息，就像gengetopt的行为那样（试一下！）。  <\/li>\r\n<\/ul>\r\n也许你已经猜到了：<u><font color=\"#ff0000\">gengetopt自己就是用自己生成的函数解析命令行选项的<\/font><\/u>  ，下面是gengetopt使用的ggo文件：<br />&nbsp;\r\n<table cellspacing=\"0\" cellpadding=\"10\" bgcolor=\"#e0e0e0\" nosave=\"\">\r\n    <tbody>\r\n        <tr nosave=\"\">\r\n            <td nosave=\"\">\r\n            <pre>purpose &quot;This program generates a C function that uses getopt_long function<br />to parse the command line options, validate them and fill a struct.&quot;<\/pre>\r\n            <pre>option&nbsp; &quot;input&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i &quot;input file. default std input&quot;&nbsp; string&nbsp;&nbsp;&nbsp;&nbsp; no<br />option&nbsp; &quot;func-name&quot;&nbsp;&nbsp;&nbsp;&nbsp; f &quot;name of generated function&quot;&nbsp; string default=&quot;cmdline_parser&quot; no<br />option&nbsp; &quot;file-name&quot;&nbsp;&nbsp;&nbsp;&nbsp; F &quot;name of generated file&quot;&nbsp; string default=&quot;cmdline&quot; no<br />option&nbsp; &quot;long-help&quot;&nbsp;&nbsp;&nbsp;&nbsp; l &quot;long usage line in help&quot; no<br />option&nbsp; &quot;unamed-opts&quot;&nbsp;&nbsp; u &quot;accept filenames&quot; no<br />option&nbsp; &quot;no-handle-help&quot;&nbsp;&nbsp; - &quot;do not handle --help|-h automatically&quot; no&nbsp;<br />option&nbsp; &quot;no-handle-version&quot;&nbsp;&nbsp; - &quot;do not handle --version|-V automatically&quot; no<br />option&nbsp; &quot;no-handle-error&quot; - &quot;do not exit on errors&quot; no<\/pre>\r\n            <\/td>\r\n        <\/tr>\r\n    <\/tbody>\r\n<\/table>\r\n<p>gengetopt自己使用的生成命令如下：<\/p>\r\n<pre>gengetopt --input=cmdline.ggo --no-handle-version --no-handle-help --no-handle-error<\/pre>\r\n当指定<em>--help<\/em>|<em>-h<\/em>选项时，gengetopt会调用<em>cmdline_parser_print_help()<\/em>然后输出报告bug的请求。当指定<em>--version<\/em>|<em>-V<\/em>时，gengetopt会调用<em>cmdline_parser_print_version()<\/em>并输出版权信息。<br />如果发生错误，会输出错误消息到屏幕上：\r\n<pre>$ ./gengetopt --zzzz<br />./gengetopt: unrecognized option `--zzzz'<br />Run gengetopt --help to see the list of options.<\/pre>\r\n<hr /> <br />&nbsp;"}
{"id":"be700d2621bf0bbf79a4f12582dd8617","title":"未来五年程序员应当具备的十项技能","body":"<p>&nbsp;<\/p>\r\n<p><span style=\"white-space: pre;\">\t\t\t\t\t<\/span><strong>未来五年程序员应当具备的十项技能<\/strong><\/p>\r\n<p>作为一名程序员，如果你想在这个领域内继续向前进步或者在当前的经济形势下保持不被炒鱿鱼，那么你就决不应当自满自足，你需要继续学习。近日，著名IT评论员Justin James在他的博客中列出了未来五年程序员应当具备的十项技能，如果照此实践，你未来的工作前景一定一片光明。<\/p>\r\n<p>当前的经济形势下，很多程序员将目光聚焦在短期内的工作形式上，但是你仍然要抽出时间和精力学习新的技能。以下是作为程序员应当即刻学习的十项技能，以确保在未来五年内你的简历上有真材实料。当然这个名单很难做到详尽而没有遗漏，有些领域没有涉及到（比如大型机开发者）。然而，对于一般的主流开发而言，你至少要学会以下十条中的七条，而且掌握的程度不是那种你在工作面试上能够夸夸其谈，而是真正能够用于实际开发。<\/p>\r\n<p><strong>1，三大主流开发体系之一(.NET, Java, PHP)<\/strong><\/p>\r\n<p>除非软件开发领域发生巨大的变革（这机率好比行星撞击地球），不然程序员至少需要知道三大开发系统中（.NET (VB.NET or C#), Java, PHP）的一种。而且仅仅了解核心语言是不够的，因为现在的项目拥有越来越多的不同功能，这也迫使程序员对相关的框架和库了解得更深。<\/p>\r\n<p><strong>2，富客户端应用（Rich Internet Applications）<\/strong><\/p>\r\n<p>无论你对Flash是爱还是恨，我们都不得不承认在过去的几年里Flash的发展壮大已远不仅是应用于动画制作。Flash以及Flex和AIR都具备越来越多的功能。而Flash的竞争者，如JavaFX和Silverlight等也在不断提升自身的性能和表现。让富互联网应用更加活跃的是，HTML 5正整合进所有种类的RIA功能，包括数据库连接、将W3C置于AJAX上等。在不远的将来，作为一名RIA领域的专家无疑将给你的简历添上浓重的一笔。<\/p>\r\n<p><strong>3，Web页面开发<\/strong><\/p>\r\n<p>Web开发恐怕在未来的很长时间内都是主流技术之一。许多程序员往往满足于构建后台、或者只是专注于框架基础而忽略了Web。但是越来越多的企业需要如何在交互代码（hand code）级别处理Web技术的人员，所以掌握JavaScript、CSS和HTML必将在未来五年内的职场上无往不胜。<\/p>\r\n<p><strong>4，Web服务端开发<\/strong><\/p>\r\n<p>REST 还是SOAP? JSON 还是XML?当然选择答案得依据项目来定，但如果一名程序员不会创建Web服务（尽管这个程序员也许不用写Web应用），那么他在工作岗位上一定倍感艰难。因为即便是过去那些被ODBC, COM或者 RPC主宰的领域现在也转到了一些形式的Web服务上了。<\/p>\r\n<p><strong>5，软性技能<\/strong><\/p>\r\n<p>一段时间以来就有这样一种趋势即：无论在企业内部还是企业外部提高IT的能见度。程序员被越来越多地带去参加非开发性会议来提供技术支持。例如，没有IT升级系统，首席财务官不可能改变收支细则；没有IT升级CRM工作流，运营总监不可能改变一个中心呼叫进程。同样，客户经常直接与开发团队沟通以确保他们的需求被完成。是否每个程序员都应该回去学习礼仪课来与别人更好的交往呢？那倒不必，但是程序员的确要提高待人接物的软性能力，以在职场上获得更大的价值。<\/p>\r\n<p><strong>6，一种动态或者函数式程序设计语言(Functional Programming Language)<\/strong><\/p>\r\n<p>类如Ruby, Python, F#和Groovy等的语言虽然不完全主流，但是语言内部包含的思想却是开发界的主流。比如，微软.NET中的LINQ系统就是函数式程序设计语言的一个直接派生。得益于Rails框架和Silverlight的发展，Ruby和Python语言在一些领域变得很热门。学习这样一门语言不仅丰富了你的简历，而且会开阔你的开发视野。我所遇到的顶级开发者几乎都曾在演讲中提到学习一门动态语言或者函数式程序设计语言的重要性，就我的个人经历而言，这确实很有用。<\/p>\r\n<p><strong>7，敏捷开发<\/strong><\/p>\r\n<p>当敏捷开发第一次冲击主流的开发意识时，我跟许多开发者一样持怀疑的观点。因为它抛弃了控制、标准等，看起来是一种完全与传统方法相悖的开发方法。但随着时间的发展，敏捷背后的思想被定义的越来越好，应用得也越来越棒。许多开发或者采用敏捷，或者在敏捷开发的实验阶段。尽管敏捷不是失败项目的万灵药，但它确实在软件开发中有一席之地。那些对敏捷有很好的理解并且有应用经历的开发者必将在未来五年内成为抢手货。<\/p>\r\n<p><strong>8，业务领域知识<\/strong><\/p>\r\n<p>开发团队越来越被看做是项目的合作者，这意味着了解该领域的开发者将对该项目的贡献更大。有了敏捷，开发者可以说我们可以在这儿很简单地增加这个功能，而这将让我们的产品更具价值。或者这个要求不符合我们日志显示的常用类型。由于越来越多的程序员反对必须了解该领域内的所有问题（实际上也不可能做到），所以不可否认的是越来越多的企业希望开发者起码了解该领域内的基础知识，越多越好。<\/p>\r\n<p><strong>9，质量控制<\/strong><\/p>\r\n<p>几年前的时候，很多企业和产品没有bug跟踪系统、没有版本控制和其他类似的工具，所写出的代码和产品都只是跟程序员和他所用的IDE有关。幸而开发领域有了新的、集成的工具如Microsoft Visual Studio Team System，而且产品、代码高质量及可用性的透明度提高，开源环境等，现在没有这种工具的企业已经越来越少稀少。开发者除了知道如何源代码控制、如何使用VM系统构建测试环境之外，还要做更多的质量控制工作，并具备很好的清洁意识来确保他与他的团队协调一致。那些将代码处存在个人硬盘中，没有记录代码变更、任务目录等的开发者，不但在传统的开发环境中不受欢迎，在敏捷的开发环境中也不受欢迎。<\/p>\r\n<p><strong>10，移动开发<\/strong><\/p>\r\n<p>在上世纪90年代末，Web开发一跃成为主流并且将原来传统的桌面应用开发边缘化。在2008，移动开发大肆进入人们的视野，而且至少在五年内移动开发都将是开发领域的重中之重。当然移动开发的方式有很多种，但无论你选择哪一种都将令你成为未来的抢手货。<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>文章来自CSDN。&nbsp;<\/p>\r\n<p>&nbsp;<\/p>"}
{"id":"c819ab95b660f53da4e24e1d90a20aaf","title":"C语言的运算符","body":"<p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><b><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">C<\/span><\/b><b><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">语言的运算符：<\/span><\/b><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"> <p><\/p><\/span><\/p><table class=\"MsoNormalTable\" style=\"WIDTH: 100%; mso-padding-alt: 0cm 0cm 0cm 0cm; mso-cellspacing: .7pt\" cellspacing=\"1\" cellpadding=\"0\" width=\"100%\" border=\"0\"><tbody><tr style=\"HEIGHT: 7.5pt; mso-yfti-irow: 0; mso-yfti-firstrow: yes\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 7.5pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 8pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 7.5pt\" width=\"11%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 7.5pt\" align=\"center\"><b><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">优先级<\/span><\/b><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 7.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 7.5pt\" align=\"center\"><b><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">运算符<\/span><\/b><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 7.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 7.5pt\" align=\"center\"><b><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">含义<\/span><\/b><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 7.5pt\" width=\"25%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 7.5pt\" align=\"center\"><b><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">要求运算对象的个数<\/span><\/b><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 7.5pt\" width=\"14%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 7.5pt\" align=\"center\"><b><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">结合方向<\/span><\/b><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 7.5pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 8pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 6.75pt; mso-yfti-irow: 1\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 6.75pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 7pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 6.75pt\" width=\"11%\" rowspan=\"4\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 6.75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">1<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 6.75pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 6.75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">( )<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 6.75pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 6.75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">圆括号<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 6.75pt\" width=\"25%\" rowspan=\"4\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 6.75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">　<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 6.75pt\" width=\"14%\" rowspan=\"4\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 6.75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自左至右<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 6.75pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 7pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 14.25pt; mso-yfti-irow: 2\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">[ ]<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">下标运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 14.25pt; mso-yfti-irow: 3\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">-&gt;<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">指向结构体成员运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 14.25pt; mso-yfti-irow: 4\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">.<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">结构体成员运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 2.25pt; mso-yfti-irow: 5\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 2.25pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"9\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 2.25pt\" width=\"11%\" rowspan=\"9\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">2<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 2.25pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 2.25pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">！<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 2.25pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 2.25pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">逻辑非运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 2.25pt\" width=\"25%\" rowspan=\"9\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 2.25pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">1<br/><\/span><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（单目运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 2.25pt\" width=\"14%\" rowspan=\"9\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 2.25pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自右至左<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 2.25pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"9\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 2pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 6\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">～<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">按位取反运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 7\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">＋＋<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自增运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 8\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">－－<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自减运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 9\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">－<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">负号运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 10\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（类型）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">类型转换运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 11\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">*<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">指针运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 12\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">&amp;<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">地址与运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 13\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">sizeof<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">长度运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 5.25pt; mso-yfti-irow: 14\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 5.25pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"3\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 5.25pt\" width=\"11%\" rowspan=\"3\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">3<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 5.25pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 5.25pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">*<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 5.25pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 5.25pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">成法运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 5.25pt\" width=\"25%\" rowspan=\"3\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 5.25pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">2<br/><\/span><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（双目运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 5.25pt\" width=\"14%\" rowspan=\"3\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 5.25pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自左至右<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 5.25pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"3\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 5pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 4.5pt; mso-yfti-irow: 15\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 4.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 4.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">/<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 4.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 4.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">除法运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 4.5pt; mso-yfti-irow: 16\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 4.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 4.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">%<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 4.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 4.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">求余运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 17\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"11%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">4<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">+<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">加法运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"25%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">2<br/><\/span><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（双目运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"14%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自左至右<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 2pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 0.75pt; mso-yfti-irow: 18\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">-<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">减法运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 0.75pt; mso-yfti-irow: 19\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"11%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">5<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">&lt;&lt;<p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">左移运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"25%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">2<br/><\/span><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（双目运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"14%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自左至右<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 1pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 0.75pt; mso-yfti-irow: 20\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">&gt;&gt;<p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">右移运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 0.75pt; mso-yfti-irow: 21\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"4\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"11%\" rowspan=\"4\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">6<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">&lt;<p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"32%\" rowspan=\"4\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">关系运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"25%\" rowspan=\"4\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">2<br/><\/span><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（双目运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"14%\" rowspan=\"4\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自左至右<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"4\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 1pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 0.75pt; mso-yfti-irow: 22\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">&lt;=<p><\/p><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 23\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">&gt;<p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 24\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">&gt;=<p><\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 0.75pt; mso-yfti-irow: 25\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"11%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">7<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">==<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">等于运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"25%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">2<br/><\/span><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（双目运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"14%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自左至右<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"2\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 1pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 0.75pt; mso-yfti-irow: 26\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">!=<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">不等于运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 27\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 2pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"11%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">8<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">&amp;<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">按位与运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"25%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">2<br/><\/span><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（双目运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"14%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自左至右<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 2pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 28\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 2pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"11%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">9<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">^<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">按位异或运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"25%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">2<br/><\/span><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（双目运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"14%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自左至右<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 2pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 29\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 2pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"11%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">10<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">|<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">按位或运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"25%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">2<br/><\/span><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（双目运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"14%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自左至右<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 2pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 1.5pt; mso-yfti-irow: 30\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 2pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"11%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">11<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">&amp;&amp;<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">逻辑与运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"25%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">2<br/><\/span><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（双目运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt\" width=\"14%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 1.5pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自左至右<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 1.5pt; BACKGROUND-COLOR: transparent\" width=\"3%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 2pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 0.75pt; mso-yfti-irow: 31\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"14\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"11%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">12<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">||<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">逻辑或运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"25%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">2<br/><\/span><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（双目运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"14%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自左至右<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 3%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt; BACKGROUND-COLOR: transparent\" width=\"3%\" rowspan=\"14\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: left; mso-pagination: widow-orphan\" align=\"left\"><span lang=\"EN-US\" style=\"FONT-SIZE: 1pt; FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\"><p>&nbsp;<\/p><\/span><\/p><\/td><\/tr><tr style=\"HEIGHT: 0.75pt; mso-yfti-irow: 32\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"11%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">13<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">? :<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">条件运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"25%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">3<br/><\/span><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">（三目运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 0.75pt\" width=\"14%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: .75pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自右至左<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 33\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"11%\" rowspan=\"11\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 11.25pt; TEXT-ALIGN: center; mso-pagination: widow-orphan\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">14<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">=<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"32%\" rowspan=\"11\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">赋值运算符<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"25%\" rowspan=\"11\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">2<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"14%\" rowspan=\"11\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">自左至右<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 34\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">+=<p><\/p><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 35\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">-=<p><\/p><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 36\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">*=<p><\/p><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 37\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">/=<p><\/p><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 38\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">%=<p><\/p><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 39\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">&gt;&gt;=<p><\/p><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 40\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">&lt;&lt;=<p><\/p><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 41\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">&amp;=<p><\/p><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 42\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">^=<p><\/p><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 43\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">|=<p><\/p><\/span><\/p><\/td><\/tr><tr style=\"mso-yfti-irow: 44; mso-yfti-lastrow: yes\"><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 11%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"11%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">15<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 12%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"12%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span lang=\"EN-US\" style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">,<p><\/p><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 32%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"32%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">逗号运算符<span lang=\"EN-US\"><br/><\/span>（顺序求值运算符）<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 25%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"25%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">　<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><td style=\"BORDER-RIGHT: #ffffff; PADDING-RIGHT: 0cm; BORDER-TOP: #ffffff; PADDING-LEFT: 0cm; BACKGROUND: #ccccff; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 14%; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff\" width=\"14%\"><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-line-height-alt: 0pt\" align=\"center\"><span style=\"FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体\">　<span lang=\"EN-US\"><p><\/p><\/span><\/span><\/p><\/td><\/tr><\/tbody><\/table><p class=\"MsoNormal\" style=\"MARGIN: 0cm 0cm 0pt\"><span lang=\"EN-US\"><p><font face=\"Times New Roman\" size=\"3\">&nbsp;<\/font><\/p><\/span><\/p>"}
